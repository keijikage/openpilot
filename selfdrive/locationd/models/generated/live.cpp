#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4988174483772121019) {
   out_4988174483772121019[0] = 0;
   out_4988174483772121019[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4988174483772121019[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4988174483772121019[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4988174483772121019[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4988174483772121019[5] = -sin(in_vec[1]);
   out_4988174483772121019[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4988174483772121019[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4988174483772121019[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4988174483772121019[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4988174483772121019[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4988174483772121019[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4988174483772121019[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4988174483772121019[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4988174483772121019[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4988174483772121019[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4988174483772121019[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4988174483772121019[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_981480701005785015) {
   out_981480701005785015[0] = delta_x[0] + nom_x[0];
   out_981480701005785015[1] = delta_x[1] + nom_x[1];
   out_981480701005785015[2] = delta_x[2] + nom_x[2];
   out_981480701005785015[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_981480701005785015[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_981480701005785015[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_981480701005785015[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_981480701005785015[7] = delta_x[6] + nom_x[7];
   out_981480701005785015[8] = delta_x[7] + nom_x[8];
   out_981480701005785015[9] = delta_x[8] + nom_x[9];
   out_981480701005785015[10] = delta_x[9] + nom_x[10];
   out_981480701005785015[11] = delta_x[10] + nom_x[11];
   out_981480701005785015[12] = delta_x[11] + nom_x[12];
   out_981480701005785015[13] = delta_x[12] + nom_x[13];
   out_981480701005785015[14] = delta_x[13] + nom_x[14];
   out_981480701005785015[15] = delta_x[14] + nom_x[15];
   out_981480701005785015[16] = delta_x[15] + nom_x[16];
   out_981480701005785015[17] = delta_x[16] + nom_x[17];
   out_981480701005785015[18] = delta_x[17] + nom_x[18];
   out_981480701005785015[19] = delta_x[18] + nom_x[19];
   out_981480701005785015[20] = delta_x[19] + nom_x[20];
   out_981480701005785015[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7691555028347121894) {
   out_7691555028347121894[0] = -nom_x[0] + true_x[0];
   out_7691555028347121894[1] = -nom_x[1] + true_x[1];
   out_7691555028347121894[2] = -nom_x[2] + true_x[2];
   out_7691555028347121894[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7691555028347121894[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7691555028347121894[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7691555028347121894[6] = -nom_x[7] + true_x[7];
   out_7691555028347121894[7] = -nom_x[8] + true_x[8];
   out_7691555028347121894[8] = -nom_x[9] + true_x[9];
   out_7691555028347121894[9] = -nom_x[10] + true_x[10];
   out_7691555028347121894[10] = -nom_x[11] + true_x[11];
   out_7691555028347121894[11] = -nom_x[12] + true_x[12];
   out_7691555028347121894[12] = -nom_x[13] + true_x[13];
   out_7691555028347121894[13] = -nom_x[14] + true_x[14];
   out_7691555028347121894[14] = -nom_x[15] + true_x[15];
   out_7691555028347121894[15] = -nom_x[16] + true_x[16];
   out_7691555028347121894[16] = -nom_x[17] + true_x[17];
   out_7691555028347121894[17] = -nom_x[18] + true_x[18];
   out_7691555028347121894[18] = -nom_x[19] + true_x[19];
   out_7691555028347121894[19] = -nom_x[20] + true_x[20];
   out_7691555028347121894[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3170047989686754658) {
   out_3170047989686754658[0] = 1.0;
   out_3170047989686754658[1] = 0;
   out_3170047989686754658[2] = 0;
   out_3170047989686754658[3] = 0;
   out_3170047989686754658[4] = 0;
   out_3170047989686754658[5] = 0;
   out_3170047989686754658[6] = 0;
   out_3170047989686754658[7] = 0;
   out_3170047989686754658[8] = 0;
   out_3170047989686754658[9] = 0;
   out_3170047989686754658[10] = 0;
   out_3170047989686754658[11] = 0;
   out_3170047989686754658[12] = 0;
   out_3170047989686754658[13] = 0;
   out_3170047989686754658[14] = 0;
   out_3170047989686754658[15] = 0;
   out_3170047989686754658[16] = 0;
   out_3170047989686754658[17] = 0;
   out_3170047989686754658[18] = 0;
   out_3170047989686754658[19] = 0;
   out_3170047989686754658[20] = 0;
   out_3170047989686754658[21] = 0;
   out_3170047989686754658[22] = 1.0;
   out_3170047989686754658[23] = 0;
   out_3170047989686754658[24] = 0;
   out_3170047989686754658[25] = 0;
   out_3170047989686754658[26] = 0;
   out_3170047989686754658[27] = 0;
   out_3170047989686754658[28] = 0;
   out_3170047989686754658[29] = 0;
   out_3170047989686754658[30] = 0;
   out_3170047989686754658[31] = 0;
   out_3170047989686754658[32] = 0;
   out_3170047989686754658[33] = 0;
   out_3170047989686754658[34] = 0;
   out_3170047989686754658[35] = 0;
   out_3170047989686754658[36] = 0;
   out_3170047989686754658[37] = 0;
   out_3170047989686754658[38] = 0;
   out_3170047989686754658[39] = 0;
   out_3170047989686754658[40] = 0;
   out_3170047989686754658[41] = 0;
   out_3170047989686754658[42] = 0;
   out_3170047989686754658[43] = 0;
   out_3170047989686754658[44] = 1.0;
   out_3170047989686754658[45] = 0;
   out_3170047989686754658[46] = 0;
   out_3170047989686754658[47] = 0;
   out_3170047989686754658[48] = 0;
   out_3170047989686754658[49] = 0;
   out_3170047989686754658[50] = 0;
   out_3170047989686754658[51] = 0;
   out_3170047989686754658[52] = 0;
   out_3170047989686754658[53] = 0;
   out_3170047989686754658[54] = 0;
   out_3170047989686754658[55] = 0;
   out_3170047989686754658[56] = 0;
   out_3170047989686754658[57] = 0;
   out_3170047989686754658[58] = 0;
   out_3170047989686754658[59] = 0;
   out_3170047989686754658[60] = 0;
   out_3170047989686754658[61] = 0;
   out_3170047989686754658[62] = 0;
   out_3170047989686754658[63] = 0;
   out_3170047989686754658[64] = 0;
   out_3170047989686754658[65] = 0;
   out_3170047989686754658[66] = -0.5*state[4];
   out_3170047989686754658[67] = -0.5*state[5];
   out_3170047989686754658[68] = -0.5*state[6];
   out_3170047989686754658[69] = 0;
   out_3170047989686754658[70] = 0;
   out_3170047989686754658[71] = 0;
   out_3170047989686754658[72] = 0;
   out_3170047989686754658[73] = 0;
   out_3170047989686754658[74] = 0;
   out_3170047989686754658[75] = 0;
   out_3170047989686754658[76] = 0;
   out_3170047989686754658[77] = 0;
   out_3170047989686754658[78] = 0;
   out_3170047989686754658[79] = 0;
   out_3170047989686754658[80] = 0;
   out_3170047989686754658[81] = 0;
   out_3170047989686754658[82] = 0;
   out_3170047989686754658[83] = 0;
   out_3170047989686754658[84] = 0;
   out_3170047989686754658[85] = 0;
   out_3170047989686754658[86] = 0;
   out_3170047989686754658[87] = 0.5*state[3];
   out_3170047989686754658[88] = 0.5*state[6];
   out_3170047989686754658[89] = -0.5*state[5];
   out_3170047989686754658[90] = 0;
   out_3170047989686754658[91] = 0;
   out_3170047989686754658[92] = 0;
   out_3170047989686754658[93] = 0;
   out_3170047989686754658[94] = 0;
   out_3170047989686754658[95] = 0;
   out_3170047989686754658[96] = 0;
   out_3170047989686754658[97] = 0;
   out_3170047989686754658[98] = 0;
   out_3170047989686754658[99] = 0;
   out_3170047989686754658[100] = 0;
   out_3170047989686754658[101] = 0;
   out_3170047989686754658[102] = 0;
   out_3170047989686754658[103] = 0;
   out_3170047989686754658[104] = 0;
   out_3170047989686754658[105] = 0;
   out_3170047989686754658[106] = 0;
   out_3170047989686754658[107] = 0;
   out_3170047989686754658[108] = -0.5*state[6];
   out_3170047989686754658[109] = 0.5*state[3];
   out_3170047989686754658[110] = 0.5*state[4];
   out_3170047989686754658[111] = 0;
   out_3170047989686754658[112] = 0;
   out_3170047989686754658[113] = 0;
   out_3170047989686754658[114] = 0;
   out_3170047989686754658[115] = 0;
   out_3170047989686754658[116] = 0;
   out_3170047989686754658[117] = 0;
   out_3170047989686754658[118] = 0;
   out_3170047989686754658[119] = 0;
   out_3170047989686754658[120] = 0;
   out_3170047989686754658[121] = 0;
   out_3170047989686754658[122] = 0;
   out_3170047989686754658[123] = 0;
   out_3170047989686754658[124] = 0;
   out_3170047989686754658[125] = 0;
   out_3170047989686754658[126] = 0;
   out_3170047989686754658[127] = 0;
   out_3170047989686754658[128] = 0;
   out_3170047989686754658[129] = 0.5*state[5];
   out_3170047989686754658[130] = -0.5*state[4];
   out_3170047989686754658[131] = 0.5*state[3];
   out_3170047989686754658[132] = 0;
   out_3170047989686754658[133] = 0;
   out_3170047989686754658[134] = 0;
   out_3170047989686754658[135] = 0;
   out_3170047989686754658[136] = 0;
   out_3170047989686754658[137] = 0;
   out_3170047989686754658[138] = 0;
   out_3170047989686754658[139] = 0;
   out_3170047989686754658[140] = 0;
   out_3170047989686754658[141] = 0;
   out_3170047989686754658[142] = 0;
   out_3170047989686754658[143] = 0;
   out_3170047989686754658[144] = 0;
   out_3170047989686754658[145] = 0;
   out_3170047989686754658[146] = 0;
   out_3170047989686754658[147] = 0;
   out_3170047989686754658[148] = 0;
   out_3170047989686754658[149] = 0;
   out_3170047989686754658[150] = 0;
   out_3170047989686754658[151] = 0;
   out_3170047989686754658[152] = 0;
   out_3170047989686754658[153] = 1.0;
   out_3170047989686754658[154] = 0;
   out_3170047989686754658[155] = 0;
   out_3170047989686754658[156] = 0;
   out_3170047989686754658[157] = 0;
   out_3170047989686754658[158] = 0;
   out_3170047989686754658[159] = 0;
   out_3170047989686754658[160] = 0;
   out_3170047989686754658[161] = 0;
   out_3170047989686754658[162] = 0;
   out_3170047989686754658[163] = 0;
   out_3170047989686754658[164] = 0;
   out_3170047989686754658[165] = 0;
   out_3170047989686754658[166] = 0;
   out_3170047989686754658[167] = 0;
   out_3170047989686754658[168] = 0;
   out_3170047989686754658[169] = 0;
   out_3170047989686754658[170] = 0;
   out_3170047989686754658[171] = 0;
   out_3170047989686754658[172] = 0;
   out_3170047989686754658[173] = 0;
   out_3170047989686754658[174] = 0;
   out_3170047989686754658[175] = 1.0;
   out_3170047989686754658[176] = 0;
   out_3170047989686754658[177] = 0;
   out_3170047989686754658[178] = 0;
   out_3170047989686754658[179] = 0;
   out_3170047989686754658[180] = 0;
   out_3170047989686754658[181] = 0;
   out_3170047989686754658[182] = 0;
   out_3170047989686754658[183] = 0;
   out_3170047989686754658[184] = 0;
   out_3170047989686754658[185] = 0;
   out_3170047989686754658[186] = 0;
   out_3170047989686754658[187] = 0;
   out_3170047989686754658[188] = 0;
   out_3170047989686754658[189] = 0;
   out_3170047989686754658[190] = 0;
   out_3170047989686754658[191] = 0;
   out_3170047989686754658[192] = 0;
   out_3170047989686754658[193] = 0;
   out_3170047989686754658[194] = 0;
   out_3170047989686754658[195] = 0;
   out_3170047989686754658[196] = 0;
   out_3170047989686754658[197] = 1.0;
   out_3170047989686754658[198] = 0;
   out_3170047989686754658[199] = 0;
   out_3170047989686754658[200] = 0;
   out_3170047989686754658[201] = 0;
   out_3170047989686754658[202] = 0;
   out_3170047989686754658[203] = 0;
   out_3170047989686754658[204] = 0;
   out_3170047989686754658[205] = 0;
   out_3170047989686754658[206] = 0;
   out_3170047989686754658[207] = 0;
   out_3170047989686754658[208] = 0;
   out_3170047989686754658[209] = 0;
   out_3170047989686754658[210] = 0;
   out_3170047989686754658[211] = 0;
   out_3170047989686754658[212] = 0;
   out_3170047989686754658[213] = 0;
   out_3170047989686754658[214] = 0;
   out_3170047989686754658[215] = 0;
   out_3170047989686754658[216] = 0;
   out_3170047989686754658[217] = 0;
   out_3170047989686754658[218] = 0;
   out_3170047989686754658[219] = 1.0;
   out_3170047989686754658[220] = 0;
   out_3170047989686754658[221] = 0;
   out_3170047989686754658[222] = 0;
   out_3170047989686754658[223] = 0;
   out_3170047989686754658[224] = 0;
   out_3170047989686754658[225] = 0;
   out_3170047989686754658[226] = 0;
   out_3170047989686754658[227] = 0;
   out_3170047989686754658[228] = 0;
   out_3170047989686754658[229] = 0;
   out_3170047989686754658[230] = 0;
   out_3170047989686754658[231] = 0;
   out_3170047989686754658[232] = 0;
   out_3170047989686754658[233] = 0;
   out_3170047989686754658[234] = 0;
   out_3170047989686754658[235] = 0;
   out_3170047989686754658[236] = 0;
   out_3170047989686754658[237] = 0;
   out_3170047989686754658[238] = 0;
   out_3170047989686754658[239] = 0;
   out_3170047989686754658[240] = 0;
   out_3170047989686754658[241] = 1.0;
   out_3170047989686754658[242] = 0;
   out_3170047989686754658[243] = 0;
   out_3170047989686754658[244] = 0;
   out_3170047989686754658[245] = 0;
   out_3170047989686754658[246] = 0;
   out_3170047989686754658[247] = 0;
   out_3170047989686754658[248] = 0;
   out_3170047989686754658[249] = 0;
   out_3170047989686754658[250] = 0;
   out_3170047989686754658[251] = 0;
   out_3170047989686754658[252] = 0;
   out_3170047989686754658[253] = 0;
   out_3170047989686754658[254] = 0;
   out_3170047989686754658[255] = 0;
   out_3170047989686754658[256] = 0;
   out_3170047989686754658[257] = 0;
   out_3170047989686754658[258] = 0;
   out_3170047989686754658[259] = 0;
   out_3170047989686754658[260] = 0;
   out_3170047989686754658[261] = 0;
   out_3170047989686754658[262] = 0;
   out_3170047989686754658[263] = 1.0;
   out_3170047989686754658[264] = 0;
   out_3170047989686754658[265] = 0;
   out_3170047989686754658[266] = 0;
   out_3170047989686754658[267] = 0;
   out_3170047989686754658[268] = 0;
   out_3170047989686754658[269] = 0;
   out_3170047989686754658[270] = 0;
   out_3170047989686754658[271] = 0;
   out_3170047989686754658[272] = 0;
   out_3170047989686754658[273] = 0;
   out_3170047989686754658[274] = 0;
   out_3170047989686754658[275] = 0;
   out_3170047989686754658[276] = 0;
   out_3170047989686754658[277] = 0;
   out_3170047989686754658[278] = 0;
   out_3170047989686754658[279] = 0;
   out_3170047989686754658[280] = 0;
   out_3170047989686754658[281] = 0;
   out_3170047989686754658[282] = 0;
   out_3170047989686754658[283] = 0;
   out_3170047989686754658[284] = 0;
   out_3170047989686754658[285] = 1.0;
   out_3170047989686754658[286] = 0;
   out_3170047989686754658[287] = 0;
   out_3170047989686754658[288] = 0;
   out_3170047989686754658[289] = 0;
   out_3170047989686754658[290] = 0;
   out_3170047989686754658[291] = 0;
   out_3170047989686754658[292] = 0;
   out_3170047989686754658[293] = 0;
   out_3170047989686754658[294] = 0;
   out_3170047989686754658[295] = 0;
   out_3170047989686754658[296] = 0;
   out_3170047989686754658[297] = 0;
   out_3170047989686754658[298] = 0;
   out_3170047989686754658[299] = 0;
   out_3170047989686754658[300] = 0;
   out_3170047989686754658[301] = 0;
   out_3170047989686754658[302] = 0;
   out_3170047989686754658[303] = 0;
   out_3170047989686754658[304] = 0;
   out_3170047989686754658[305] = 0;
   out_3170047989686754658[306] = 0;
   out_3170047989686754658[307] = 1.0;
   out_3170047989686754658[308] = 0;
   out_3170047989686754658[309] = 0;
   out_3170047989686754658[310] = 0;
   out_3170047989686754658[311] = 0;
   out_3170047989686754658[312] = 0;
   out_3170047989686754658[313] = 0;
   out_3170047989686754658[314] = 0;
   out_3170047989686754658[315] = 0;
   out_3170047989686754658[316] = 0;
   out_3170047989686754658[317] = 0;
   out_3170047989686754658[318] = 0;
   out_3170047989686754658[319] = 0;
   out_3170047989686754658[320] = 0;
   out_3170047989686754658[321] = 0;
   out_3170047989686754658[322] = 0;
   out_3170047989686754658[323] = 0;
   out_3170047989686754658[324] = 0;
   out_3170047989686754658[325] = 0;
   out_3170047989686754658[326] = 0;
   out_3170047989686754658[327] = 0;
   out_3170047989686754658[328] = 0;
   out_3170047989686754658[329] = 1.0;
   out_3170047989686754658[330] = 0;
   out_3170047989686754658[331] = 0;
   out_3170047989686754658[332] = 0;
   out_3170047989686754658[333] = 0;
   out_3170047989686754658[334] = 0;
   out_3170047989686754658[335] = 0;
   out_3170047989686754658[336] = 0;
   out_3170047989686754658[337] = 0;
   out_3170047989686754658[338] = 0;
   out_3170047989686754658[339] = 0;
   out_3170047989686754658[340] = 0;
   out_3170047989686754658[341] = 0;
   out_3170047989686754658[342] = 0;
   out_3170047989686754658[343] = 0;
   out_3170047989686754658[344] = 0;
   out_3170047989686754658[345] = 0;
   out_3170047989686754658[346] = 0;
   out_3170047989686754658[347] = 0;
   out_3170047989686754658[348] = 0;
   out_3170047989686754658[349] = 0;
   out_3170047989686754658[350] = 0;
   out_3170047989686754658[351] = 1.0;
   out_3170047989686754658[352] = 0;
   out_3170047989686754658[353] = 0;
   out_3170047989686754658[354] = 0;
   out_3170047989686754658[355] = 0;
   out_3170047989686754658[356] = 0;
   out_3170047989686754658[357] = 0;
   out_3170047989686754658[358] = 0;
   out_3170047989686754658[359] = 0;
   out_3170047989686754658[360] = 0;
   out_3170047989686754658[361] = 0;
   out_3170047989686754658[362] = 0;
   out_3170047989686754658[363] = 0;
   out_3170047989686754658[364] = 0;
   out_3170047989686754658[365] = 0;
   out_3170047989686754658[366] = 0;
   out_3170047989686754658[367] = 0;
   out_3170047989686754658[368] = 0;
   out_3170047989686754658[369] = 0;
   out_3170047989686754658[370] = 0;
   out_3170047989686754658[371] = 0;
   out_3170047989686754658[372] = 0;
   out_3170047989686754658[373] = 1.0;
   out_3170047989686754658[374] = 0;
   out_3170047989686754658[375] = 0;
   out_3170047989686754658[376] = 0;
   out_3170047989686754658[377] = 0;
   out_3170047989686754658[378] = 0;
   out_3170047989686754658[379] = 0;
   out_3170047989686754658[380] = 0;
   out_3170047989686754658[381] = 0;
   out_3170047989686754658[382] = 0;
   out_3170047989686754658[383] = 0;
   out_3170047989686754658[384] = 0;
   out_3170047989686754658[385] = 0;
   out_3170047989686754658[386] = 0;
   out_3170047989686754658[387] = 0;
   out_3170047989686754658[388] = 0;
   out_3170047989686754658[389] = 0;
   out_3170047989686754658[390] = 0;
   out_3170047989686754658[391] = 0;
   out_3170047989686754658[392] = 0;
   out_3170047989686754658[393] = 0;
   out_3170047989686754658[394] = 0;
   out_3170047989686754658[395] = 1.0;
   out_3170047989686754658[396] = 0;
   out_3170047989686754658[397] = 0;
   out_3170047989686754658[398] = 0;
   out_3170047989686754658[399] = 0;
   out_3170047989686754658[400] = 0;
   out_3170047989686754658[401] = 0;
   out_3170047989686754658[402] = 0;
   out_3170047989686754658[403] = 0;
   out_3170047989686754658[404] = 0;
   out_3170047989686754658[405] = 0;
   out_3170047989686754658[406] = 0;
   out_3170047989686754658[407] = 0;
   out_3170047989686754658[408] = 0;
   out_3170047989686754658[409] = 0;
   out_3170047989686754658[410] = 0;
   out_3170047989686754658[411] = 0;
   out_3170047989686754658[412] = 0;
   out_3170047989686754658[413] = 0;
   out_3170047989686754658[414] = 0;
   out_3170047989686754658[415] = 0;
   out_3170047989686754658[416] = 0;
   out_3170047989686754658[417] = 1.0;
   out_3170047989686754658[418] = 0;
   out_3170047989686754658[419] = 0;
   out_3170047989686754658[420] = 0;
   out_3170047989686754658[421] = 0;
   out_3170047989686754658[422] = 0;
   out_3170047989686754658[423] = 0;
   out_3170047989686754658[424] = 0;
   out_3170047989686754658[425] = 0;
   out_3170047989686754658[426] = 0;
   out_3170047989686754658[427] = 0;
   out_3170047989686754658[428] = 0;
   out_3170047989686754658[429] = 0;
   out_3170047989686754658[430] = 0;
   out_3170047989686754658[431] = 0;
   out_3170047989686754658[432] = 0;
   out_3170047989686754658[433] = 0;
   out_3170047989686754658[434] = 0;
   out_3170047989686754658[435] = 0;
   out_3170047989686754658[436] = 0;
   out_3170047989686754658[437] = 0;
   out_3170047989686754658[438] = 0;
   out_3170047989686754658[439] = 1.0;
   out_3170047989686754658[440] = 0;
   out_3170047989686754658[441] = 0;
   out_3170047989686754658[442] = 0;
   out_3170047989686754658[443] = 0;
   out_3170047989686754658[444] = 0;
   out_3170047989686754658[445] = 0;
   out_3170047989686754658[446] = 0;
   out_3170047989686754658[447] = 0;
   out_3170047989686754658[448] = 0;
   out_3170047989686754658[449] = 0;
   out_3170047989686754658[450] = 0;
   out_3170047989686754658[451] = 0;
   out_3170047989686754658[452] = 0;
   out_3170047989686754658[453] = 0;
   out_3170047989686754658[454] = 0;
   out_3170047989686754658[455] = 0;
   out_3170047989686754658[456] = 0;
   out_3170047989686754658[457] = 0;
   out_3170047989686754658[458] = 0;
   out_3170047989686754658[459] = 0;
   out_3170047989686754658[460] = 0;
   out_3170047989686754658[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8204218452068835951) {
   out_8204218452068835951[0] = dt*state[7] + state[0];
   out_8204218452068835951[1] = dt*state[8] + state[1];
   out_8204218452068835951[2] = dt*state[9] + state[2];
   out_8204218452068835951[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8204218452068835951[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8204218452068835951[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8204218452068835951[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8204218452068835951[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8204218452068835951[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8204218452068835951[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8204218452068835951[10] = state[10];
   out_8204218452068835951[11] = state[11];
   out_8204218452068835951[12] = state[12];
   out_8204218452068835951[13] = state[13];
   out_8204218452068835951[14] = state[14];
   out_8204218452068835951[15] = state[15];
   out_8204218452068835951[16] = state[16];
   out_8204218452068835951[17] = state[17];
   out_8204218452068835951[18] = state[18];
   out_8204218452068835951[19] = state[19];
   out_8204218452068835951[20] = state[20];
   out_8204218452068835951[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5970024142781703028) {
   out_5970024142781703028[0] = 1;
   out_5970024142781703028[1] = 0;
   out_5970024142781703028[2] = 0;
   out_5970024142781703028[3] = 0;
   out_5970024142781703028[4] = 0;
   out_5970024142781703028[5] = 0;
   out_5970024142781703028[6] = dt;
   out_5970024142781703028[7] = 0;
   out_5970024142781703028[8] = 0;
   out_5970024142781703028[9] = 0;
   out_5970024142781703028[10] = 0;
   out_5970024142781703028[11] = 0;
   out_5970024142781703028[12] = 0;
   out_5970024142781703028[13] = 0;
   out_5970024142781703028[14] = 0;
   out_5970024142781703028[15] = 0;
   out_5970024142781703028[16] = 0;
   out_5970024142781703028[17] = 0;
   out_5970024142781703028[18] = 0;
   out_5970024142781703028[19] = 0;
   out_5970024142781703028[20] = 0;
   out_5970024142781703028[21] = 0;
   out_5970024142781703028[22] = 1;
   out_5970024142781703028[23] = 0;
   out_5970024142781703028[24] = 0;
   out_5970024142781703028[25] = 0;
   out_5970024142781703028[26] = 0;
   out_5970024142781703028[27] = 0;
   out_5970024142781703028[28] = dt;
   out_5970024142781703028[29] = 0;
   out_5970024142781703028[30] = 0;
   out_5970024142781703028[31] = 0;
   out_5970024142781703028[32] = 0;
   out_5970024142781703028[33] = 0;
   out_5970024142781703028[34] = 0;
   out_5970024142781703028[35] = 0;
   out_5970024142781703028[36] = 0;
   out_5970024142781703028[37] = 0;
   out_5970024142781703028[38] = 0;
   out_5970024142781703028[39] = 0;
   out_5970024142781703028[40] = 0;
   out_5970024142781703028[41] = 0;
   out_5970024142781703028[42] = 0;
   out_5970024142781703028[43] = 0;
   out_5970024142781703028[44] = 1;
   out_5970024142781703028[45] = 0;
   out_5970024142781703028[46] = 0;
   out_5970024142781703028[47] = 0;
   out_5970024142781703028[48] = 0;
   out_5970024142781703028[49] = 0;
   out_5970024142781703028[50] = dt;
   out_5970024142781703028[51] = 0;
   out_5970024142781703028[52] = 0;
   out_5970024142781703028[53] = 0;
   out_5970024142781703028[54] = 0;
   out_5970024142781703028[55] = 0;
   out_5970024142781703028[56] = 0;
   out_5970024142781703028[57] = 0;
   out_5970024142781703028[58] = 0;
   out_5970024142781703028[59] = 0;
   out_5970024142781703028[60] = 0;
   out_5970024142781703028[61] = 0;
   out_5970024142781703028[62] = 0;
   out_5970024142781703028[63] = 0;
   out_5970024142781703028[64] = 0;
   out_5970024142781703028[65] = 0;
   out_5970024142781703028[66] = 1;
   out_5970024142781703028[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5970024142781703028[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5970024142781703028[69] = 0;
   out_5970024142781703028[70] = 0;
   out_5970024142781703028[71] = 0;
   out_5970024142781703028[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5970024142781703028[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5970024142781703028[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5970024142781703028[75] = 0;
   out_5970024142781703028[76] = 0;
   out_5970024142781703028[77] = 0;
   out_5970024142781703028[78] = 0;
   out_5970024142781703028[79] = 0;
   out_5970024142781703028[80] = 0;
   out_5970024142781703028[81] = 0;
   out_5970024142781703028[82] = 0;
   out_5970024142781703028[83] = 0;
   out_5970024142781703028[84] = 0;
   out_5970024142781703028[85] = 0;
   out_5970024142781703028[86] = 0;
   out_5970024142781703028[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5970024142781703028[88] = 1;
   out_5970024142781703028[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5970024142781703028[90] = 0;
   out_5970024142781703028[91] = 0;
   out_5970024142781703028[92] = 0;
   out_5970024142781703028[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5970024142781703028[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5970024142781703028[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5970024142781703028[96] = 0;
   out_5970024142781703028[97] = 0;
   out_5970024142781703028[98] = 0;
   out_5970024142781703028[99] = 0;
   out_5970024142781703028[100] = 0;
   out_5970024142781703028[101] = 0;
   out_5970024142781703028[102] = 0;
   out_5970024142781703028[103] = 0;
   out_5970024142781703028[104] = 0;
   out_5970024142781703028[105] = 0;
   out_5970024142781703028[106] = 0;
   out_5970024142781703028[107] = 0;
   out_5970024142781703028[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5970024142781703028[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5970024142781703028[110] = 1;
   out_5970024142781703028[111] = 0;
   out_5970024142781703028[112] = 0;
   out_5970024142781703028[113] = 0;
   out_5970024142781703028[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5970024142781703028[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5970024142781703028[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5970024142781703028[117] = 0;
   out_5970024142781703028[118] = 0;
   out_5970024142781703028[119] = 0;
   out_5970024142781703028[120] = 0;
   out_5970024142781703028[121] = 0;
   out_5970024142781703028[122] = 0;
   out_5970024142781703028[123] = 0;
   out_5970024142781703028[124] = 0;
   out_5970024142781703028[125] = 0;
   out_5970024142781703028[126] = 0;
   out_5970024142781703028[127] = 0;
   out_5970024142781703028[128] = 0;
   out_5970024142781703028[129] = 0;
   out_5970024142781703028[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5970024142781703028[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5970024142781703028[132] = 1;
   out_5970024142781703028[133] = 0;
   out_5970024142781703028[134] = 0;
   out_5970024142781703028[135] = 0;
   out_5970024142781703028[136] = 0;
   out_5970024142781703028[137] = 0;
   out_5970024142781703028[138] = 0;
   out_5970024142781703028[139] = 0;
   out_5970024142781703028[140] = 0;
   out_5970024142781703028[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5970024142781703028[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5970024142781703028[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5970024142781703028[144] = 0;
   out_5970024142781703028[145] = 0;
   out_5970024142781703028[146] = 0;
   out_5970024142781703028[147] = 0;
   out_5970024142781703028[148] = 0;
   out_5970024142781703028[149] = 0;
   out_5970024142781703028[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5970024142781703028[151] = 0;
   out_5970024142781703028[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5970024142781703028[153] = 0;
   out_5970024142781703028[154] = 1;
   out_5970024142781703028[155] = 0;
   out_5970024142781703028[156] = 0;
   out_5970024142781703028[157] = 0;
   out_5970024142781703028[158] = 0;
   out_5970024142781703028[159] = 0;
   out_5970024142781703028[160] = 0;
   out_5970024142781703028[161] = 0;
   out_5970024142781703028[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5970024142781703028[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5970024142781703028[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5970024142781703028[165] = 0;
   out_5970024142781703028[166] = 0;
   out_5970024142781703028[167] = 0;
   out_5970024142781703028[168] = 0;
   out_5970024142781703028[169] = 0;
   out_5970024142781703028[170] = 0;
   out_5970024142781703028[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5970024142781703028[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5970024142781703028[173] = 0;
   out_5970024142781703028[174] = 0;
   out_5970024142781703028[175] = 0;
   out_5970024142781703028[176] = 1;
   out_5970024142781703028[177] = 0;
   out_5970024142781703028[178] = 0;
   out_5970024142781703028[179] = 0;
   out_5970024142781703028[180] = 0;
   out_5970024142781703028[181] = 0;
   out_5970024142781703028[182] = 0;
   out_5970024142781703028[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5970024142781703028[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5970024142781703028[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5970024142781703028[186] = 0;
   out_5970024142781703028[187] = 0;
   out_5970024142781703028[188] = 0;
   out_5970024142781703028[189] = 0;
   out_5970024142781703028[190] = 0;
   out_5970024142781703028[191] = 0;
   out_5970024142781703028[192] = 0;
   out_5970024142781703028[193] = 0;
   out_5970024142781703028[194] = 0;
   out_5970024142781703028[195] = 0;
   out_5970024142781703028[196] = 0;
   out_5970024142781703028[197] = 0;
   out_5970024142781703028[198] = 1;
   out_5970024142781703028[199] = 0;
   out_5970024142781703028[200] = 0;
   out_5970024142781703028[201] = 0;
   out_5970024142781703028[202] = 0;
   out_5970024142781703028[203] = 0;
   out_5970024142781703028[204] = 0;
   out_5970024142781703028[205] = 0;
   out_5970024142781703028[206] = 0;
   out_5970024142781703028[207] = 0;
   out_5970024142781703028[208] = 0;
   out_5970024142781703028[209] = 0;
   out_5970024142781703028[210] = 0;
   out_5970024142781703028[211] = 0;
   out_5970024142781703028[212] = 0;
   out_5970024142781703028[213] = 0;
   out_5970024142781703028[214] = 0;
   out_5970024142781703028[215] = 0;
   out_5970024142781703028[216] = 0;
   out_5970024142781703028[217] = 0;
   out_5970024142781703028[218] = 0;
   out_5970024142781703028[219] = 0;
   out_5970024142781703028[220] = 1;
   out_5970024142781703028[221] = 0;
   out_5970024142781703028[222] = 0;
   out_5970024142781703028[223] = 0;
   out_5970024142781703028[224] = 0;
   out_5970024142781703028[225] = 0;
   out_5970024142781703028[226] = 0;
   out_5970024142781703028[227] = 0;
   out_5970024142781703028[228] = 0;
   out_5970024142781703028[229] = 0;
   out_5970024142781703028[230] = 0;
   out_5970024142781703028[231] = 0;
   out_5970024142781703028[232] = 0;
   out_5970024142781703028[233] = 0;
   out_5970024142781703028[234] = 0;
   out_5970024142781703028[235] = 0;
   out_5970024142781703028[236] = 0;
   out_5970024142781703028[237] = 0;
   out_5970024142781703028[238] = 0;
   out_5970024142781703028[239] = 0;
   out_5970024142781703028[240] = 0;
   out_5970024142781703028[241] = 0;
   out_5970024142781703028[242] = 1;
   out_5970024142781703028[243] = 0;
   out_5970024142781703028[244] = 0;
   out_5970024142781703028[245] = 0;
   out_5970024142781703028[246] = 0;
   out_5970024142781703028[247] = 0;
   out_5970024142781703028[248] = 0;
   out_5970024142781703028[249] = 0;
   out_5970024142781703028[250] = 0;
   out_5970024142781703028[251] = 0;
   out_5970024142781703028[252] = 0;
   out_5970024142781703028[253] = 0;
   out_5970024142781703028[254] = 0;
   out_5970024142781703028[255] = 0;
   out_5970024142781703028[256] = 0;
   out_5970024142781703028[257] = 0;
   out_5970024142781703028[258] = 0;
   out_5970024142781703028[259] = 0;
   out_5970024142781703028[260] = 0;
   out_5970024142781703028[261] = 0;
   out_5970024142781703028[262] = 0;
   out_5970024142781703028[263] = 0;
   out_5970024142781703028[264] = 1;
   out_5970024142781703028[265] = 0;
   out_5970024142781703028[266] = 0;
   out_5970024142781703028[267] = 0;
   out_5970024142781703028[268] = 0;
   out_5970024142781703028[269] = 0;
   out_5970024142781703028[270] = 0;
   out_5970024142781703028[271] = 0;
   out_5970024142781703028[272] = 0;
   out_5970024142781703028[273] = 0;
   out_5970024142781703028[274] = 0;
   out_5970024142781703028[275] = 0;
   out_5970024142781703028[276] = 0;
   out_5970024142781703028[277] = 0;
   out_5970024142781703028[278] = 0;
   out_5970024142781703028[279] = 0;
   out_5970024142781703028[280] = 0;
   out_5970024142781703028[281] = 0;
   out_5970024142781703028[282] = 0;
   out_5970024142781703028[283] = 0;
   out_5970024142781703028[284] = 0;
   out_5970024142781703028[285] = 0;
   out_5970024142781703028[286] = 1;
   out_5970024142781703028[287] = 0;
   out_5970024142781703028[288] = 0;
   out_5970024142781703028[289] = 0;
   out_5970024142781703028[290] = 0;
   out_5970024142781703028[291] = 0;
   out_5970024142781703028[292] = 0;
   out_5970024142781703028[293] = 0;
   out_5970024142781703028[294] = 0;
   out_5970024142781703028[295] = 0;
   out_5970024142781703028[296] = 0;
   out_5970024142781703028[297] = 0;
   out_5970024142781703028[298] = 0;
   out_5970024142781703028[299] = 0;
   out_5970024142781703028[300] = 0;
   out_5970024142781703028[301] = 0;
   out_5970024142781703028[302] = 0;
   out_5970024142781703028[303] = 0;
   out_5970024142781703028[304] = 0;
   out_5970024142781703028[305] = 0;
   out_5970024142781703028[306] = 0;
   out_5970024142781703028[307] = 0;
   out_5970024142781703028[308] = 1;
   out_5970024142781703028[309] = 0;
   out_5970024142781703028[310] = 0;
   out_5970024142781703028[311] = 0;
   out_5970024142781703028[312] = 0;
   out_5970024142781703028[313] = 0;
   out_5970024142781703028[314] = 0;
   out_5970024142781703028[315] = 0;
   out_5970024142781703028[316] = 0;
   out_5970024142781703028[317] = 0;
   out_5970024142781703028[318] = 0;
   out_5970024142781703028[319] = 0;
   out_5970024142781703028[320] = 0;
   out_5970024142781703028[321] = 0;
   out_5970024142781703028[322] = 0;
   out_5970024142781703028[323] = 0;
   out_5970024142781703028[324] = 0;
   out_5970024142781703028[325] = 0;
   out_5970024142781703028[326] = 0;
   out_5970024142781703028[327] = 0;
   out_5970024142781703028[328] = 0;
   out_5970024142781703028[329] = 0;
   out_5970024142781703028[330] = 1;
   out_5970024142781703028[331] = 0;
   out_5970024142781703028[332] = 0;
   out_5970024142781703028[333] = 0;
   out_5970024142781703028[334] = 0;
   out_5970024142781703028[335] = 0;
   out_5970024142781703028[336] = 0;
   out_5970024142781703028[337] = 0;
   out_5970024142781703028[338] = 0;
   out_5970024142781703028[339] = 0;
   out_5970024142781703028[340] = 0;
   out_5970024142781703028[341] = 0;
   out_5970024142781703028[342] = 0;
   out_5970024142781703028[343] = 0;
   out_5970024142781703028[344] = 0;
   out_5970024142781703028[345] = 0;
   out_5970024142781703028[346] = 0;
   out_5970024142781703028[347] = 0;
   out_5970024142781703028[348] = 0;
   out_5970024142781703028[349] = 0;
   out_5970024142781703028[350] = 0;
   out_5970024142781703028[351] = 0;
   out_5970024142781703028[352] = 1;
   out_5970024142781703028[353] = 0;
   out_5970024142781703028[354] = 0;
   out_5970024142781703028[355] = 0;
   out_5970024142781703028[356] = 0;
   out_5970024142781703028[357] = 0;
   out_5970024142781703028[358] = 0;
   out_5970024142781703028[359] = 0;
   out_5970024142781703028[360] = 0;
   out_5970024142781703028[361] = 0;
   out_5970024142781703028[362] = 0;
   out_5970024142781703028[363] = 0;
   out_5970024142781703028[364] = 0;
   out_5970024142781703028[365] = 0;
   out_5970024142781703028[366] = 0;
   out_5970024142781703028[367] = 0;
   out_5970024142781703028[368] = 0;
   out_5970024142781703028[369] = 0;
   out_5970024142781703028[370] = 0;
   out_5970024142781703028[371] = 0;
   out_5970024142781703028[372] = 0;
   out_5970024142781703028[373] = 0;
   out_5970024142781703028[374] = 1;
   out_5970024142781703028[375] = 0;
   out_5970024142781703028[376] = 0;
   out_5970024142781703028[377] = 0;
   out_5970024142781703028[378] = 0;
   out_5970024142781703028[379] = 0;
   out_5970024142781703028[380] = 0;
   out_5970024142781703028[381] = 0;
   out_5970024142781703028[382] = 0;
   out_5970024142781703028[383] = 0;
   out_5970024142781703028[384] = 0;
   out_5970024142781703028[385] = 0;
   out_5970024142781703028[386] = 0;
   out_5970024142781703028[387] = 0;
   out_5970024142781703028[388] = 0;
   out_5970024142781703028[389] = 0;
   out_5970024142781703028[390] = 0;
   out_5970024142781703028[391] = 0;
   out_5970024142781703028[392] = 0;
   out_5970024142781703028[393] = 0;
   out_5970024142781703028[394] = 0;
   out_5970024142781703028[395] = 0;
   out_5970024142781703028[396] = 1;
   out_5970024142781703028[397] = 0;
   out_5970024142781703028[398] = 0;
   out_5970024142781703028[399] = 0;
   out_5970024142781703028[400] = 0;
   out_5970024142781703028[401] = 0;
   out_5970024142781703028[402] = 0;
   out_5970024142781703028[403] = 0;
   out_5970024142781703028[404] = 0;
   out_5970024142781703028[405] = 0;
   out_5970024142781703028[406] = 0;
   out_5970024142781703028[407] = 0;
   out_5970024142781703028[408] = 0;
   out_5970024142781703028[409] = 0;
   out_5970024142781703028[410] = 0;
   out_5970024142781703028[411] = 0;
   out_5970024142781703028[412] = 0;
   out_5970024142781703028[413] = 0;
   out_5970024142781703028[414] = 0;
   out_5970024142781703028[415] = 0;
   out_5970024142781703028[416] = 0;
   out_5970024142781703028[417] = 0;
   out_5970024142781703028[418] = 1;
   out_5970024142781703028[419] = 0;
   out_5970024142781703028[420] = 0;
   out_5970024142781703028[421] = 0;
   out_5970024142781703028[422] = 0;
   out_5970024142781703028[423] = 0;
   out_5970024142781703028[424] = 0;
   out_5970024142781703028[425] = 0;
   out_5970024142781703028[426] = 0;
   out_5970024142781703028[427] = 0;
   out_5970024142781703028[428] = 0;
   out_5970024142781703028[429] = 0;
   out_5970024142781703028[430] = 0;
   out_5970024142781703028[431] = 0;
   out_5970024142781703028[432] = 0;
   out_5970024142781703028[433] = 0;
   out_5970024142781703028[434] = 0;
   out_5970024142781703028[435] = 0;
   out_5970024142781703028[436] = 0;
   out_5970024142781703028[437] = 0;
   out_5970024142781703028[438] = 0;
   out_5970024142781703028[439] = 0;
   out_5970024142781703028[440] = 1;
}
void h_4(double *state, double *unused, double *out_5068762038946320161) {
   out_5068762038946320161[0] = state[10] + state[13];
   out_5068762038946320161[1] = state[11] + state[14];
   out_5068762038946320161[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_9200525426774583301) {
   out_9200525426774583301[0] = 0;
   out_9200525426774583301[1] = 0;
   out_9200525426774583301[2] = 0;
   out_9200525426774583301[3] = 0;
   out_9200525426774583301[4] = 0;
   out_9200525426774583301[5] = 0;
   out_9200525426774583301[6] = 0;
   out_9200525426774583301[7] = 0;
   out_9200525426774583301[8] = 0;
   out_9200525426774583301[9] = 0;
   out_9200525426774583301[10] = 1;
   out_9200525426774583301[11] = 0;
   out_9200525426774583301[12] = 0;
   out_9200525426774583301[13] = 1;
   out_9200525426774583301[14] = 0;
   out_9200525426774583301[15] = 0;
   out_9200525426774583301[16] = 0;
   out_9200525426774583301[17] = 0;
   out_9200525426774583301[18] = 0;
   out_9200525426774583301[19] = 0;
   out_9200525426774583301[20] = 0;
   out_9200525426774583301[21] = 0;
   out_9200525426774583301[22] = 0;
   out_9200525426774583301[23] = 0;
   out_9200525426774583301[24] = 0;
   out_9200525426774583301[25] = 0;
   out_9200525426774583301[26] = 0;
   out_9200525426774583301[27] = 0;
   out_9200525426774583301[28] = 0;
   out_9200525426774583301[29] = 0;
   out_9200525426774583301[30] = 0;
   out_9200525426774583301[31] = 0;
   out_9200525426774583301[32] = 0;
   out_9200525426774583301[33] = 1;
   out_9200525426774583301[34] = 0;
   out_9200525426774583301[35] = 0;
   out_9200525426774583301[36] = 1;
   out_9200525426774583301[37] = 0;
   out_9200525426774583301[38] = 0;
   out_9200525426774583301[39] = 0;
   out_9200525426774583301[40] = 0;
   out_9200525426774583301[41] = 0;
   out_9200525426774583301[42] = 0;
   out_9200525426774583301[43] = 0;
   out_9200525426774583301[44] = 0;
   out_9200525426774583301[45] = 0;
   out_9200525426774583301[46] = 0;
   out_9200525426774583301[47] = 0;
   out_9200525426774583301[48] = 0;
   out_9200525426774583301[49] = 0;
   out_9200525426774583301[50] = 0;
   out_9200525426774583301[51] = 0;
   out_9200525426774583301[52] = 0;
   out_9200525426774583301[53] = 0;
   out_9200525426774583301[54] = 0;
   out_9200525426774583301[55] = 0;
   out_9200525426774583301[56] = 1;
   out_9200525426774583301[57] = 0;
   out_9200525426774583301[58] = 0;
   out_9200525426774583301[59] = 1;
   out_9200525426774583301[60] = 0;
   out_9200525426774583301[61] = 0;
   out_9200525426774583301[62] = 0;
   out_9200525426774583301[63] = 0;
   out_9200525426774583301[64] = 0;
   out_9200525426774583301[65] = 0;
}
void h_9(double *state, double *unused, double *out_7087070483927245922) {
   out_7087070483927245922[0] = state[10];
   out_7087070483927245922[1] = state[11];
   out_7087070483927245922[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1913306491510135831) {
   out_1913306491510135831[0] = 0;
   out_1913306491510135831[1] = 0;
   out_1913306491510135831[2] = 0;
   out_1913306491510135831[3] = 0;
   out_1913306491510135831[4] = 0;
   out_1913306491510135831[5] = 0;
   out_1913306491510135831[6] = 0;
   out_1913306491510135831[7] = 0;
   out_1913306491510135831[8] = 0;
   out_1913306491510135831[9] = 0;
   out_1913306491510135831[10] = 1;
   out_1913306491510135831[11] = 0;
   out_1913306491510135831[12] = 0;
   out_1913306491510135831[13] = 0;
   out_1913306491510135831[14] = 0;
   out_1913306491510135831[15] = 0;
   out_1913306491510135831[16] = 0;
   out_1913306491510135831[17] = 0;
   out_1913306491510135831[18] = 0;
   out_1913306491510135831[19] = 0;
   out_1913306491510135831[20] = 0;
   out_1913306491510135831[21] = 0;
   out_1913306491510135831[22] = 0;
   out_1913306491510135831[23] = 0;
   out_1913306491510135831[24] = 0;
   out_1913306491510135831[25] = 0;
   out_1913306491510135831[26] = 0;
   out_1913306491510135831[27] = 0;
   out_1913306491510135831[28] = 0;
   out_1913306491510135831[29] = 0;
   out_1913306491510135831[30] = 0;
   out_1913306491510135831[31] = 0;
   out_1913306491510135831[32] = 0;
   out_1913306491510135831[33] = 1;
   out_1913306491510135831[34] = 0;
   out_1913306491510135831[35] = 0;
   out_1913306491510135831[36] = 0;
   out_1913306491510135831[37] = 0;
   out_1913306491510135831[38] = 0;
   out_1913306491510135831[39] = 0;
   out_1913306491510135831[40] = 0;
   out_1913306491510135831[41] = 0;
   out_1913306491510135831[42] = 0;
   out_1913306491510135831[43] = 0;
   out_1913306491510135831[44] = 0;
   out_1913306491510135831[45] = 0;
   out_1913306491510135831[46] = 0;
   out_1913306491510135831[47] = 0;
   out_1913306491510135831[48] = 0;
   out_1913306491510135831[49] = 0;
   out_1913306491510135831[50] = 0;
   out_1913306491510135831[51] = 0;
   out_1913306491510135831[52] = 0;
   out_1913306491510135831[53] = 0;
   out_1913306491510135831[54] = 0;
   out_1913306491510135831[55] = 0;
   out_1913306491510135831[56] = 1;
   out_1913306491510135831[57] = 0;
   out_1913306491510135831[58] = 0;
   out_1913306491510135831[59] = 0;
   out_1913306491510135831[60] = 0;
   out_1913306491510135831[61] = 0;
   out_1913306491510135831[62] = 0;
   out_1913306491510135831[63] = 0;
   out_1913306491510135831[64] = 0;
   out_1913306491510135831[65] = 0;
}
void h_10(double *state, double *unused, double *out_4000295638352727946) {
   out_4000295638352727946[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4000295638352727946[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4000295638352727946[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_9069560577065108470) {
   out_9069560577065108470[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9069560577065108470[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_9069560577065108470[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_9069560577065108470[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9069560577065108470[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9069560577065108470[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9069560577065108470[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9069560577065108470[7] = 0;
   out_9069560577065108470[8] = 0;
   out_9069560577065108470[9] = 0;
   out_9069560577065108470[10] = 0;
   out_9069560577065108470[11] = 0;
   out_9069560577065108470[12] = 0;
   out_9069560577065108470[13] = 0;
   out_9069560577065108470[14] = 0;
   out_9069560577065108470[15] = 0;
   out_9069560577065108470[16] = 1;
   out_9069560577065108470[17] = 0;
   out_9069560577065108470[18] = 0;
   out_9069560577065108470[19] = 1;
   out_9069560577065108470[20] = 0;
   out_9069560577065108470[21] = 0;
   out_9069560577065108470[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_9069560577065108470[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9069560577065108470[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_9069560577065108470[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9069560577065108470[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9069560577065108470[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9069560577065108470[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9069560577065108470[29] = 0;
   out_9069560577065108470[30] = 0;
   out_9069560577065108470[31] = 0;
   out_9069560577065108470[32] = 0;
   out_9069560577065108470[33] = 0;
   out_9069560577065108470[34] = 0;
   out_9069560577065108470[35] = 0;
   out_9069560577065108470[36] = 0;
   out_9069560577065108470[37] = 0;
   out_9069560577065108470[38] = 0;
   out_9069560577065108470[39] = 1;
   out_9069560577065108470[40] = 0;
   out_9069560577065108470[41] = 0;
   out_9069560577065108470[42] = 1;
   out_9069560577065108470[43] = 0;
   out_9069560577065108470[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_9069560577065108470[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_9069560577065108470[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9069560577065108470[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9069560577065108470[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9069560577065108470[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9069560577065108470[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9069560577065108470[51] = 0;
   out_9069560577065108470[52] = 0;
   out_9069560577065108470[53] = 0;
   out_9069560577065108470[54] = 0;
   out_9069560577065108470[55] = 0;
   out_9069560577065108470[56] = 0;
   out_9069560577065108470[57] = 0;
   out_9069560577065108470[58] = 0;
   out_9069560577065108470[59] = 0;
   out_9069560577065108470[60] = 0;
   out_9069560577065108470[61] = 0;
   out_9069560577065108470[62] = 1;
   out_9069560577065108470[63] = 0;
   out_9069560577065108470[64] = 0;
   out_9069560577065108470[65] = 1;
}
void h_12(double *state, double *unused, double *out_4084887904843798783) {
   out_4084887904843798783[0] = state[0];
   out_4084887904843798783[1] = state[1];
   out_4084887904843798783[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2864960269892235319) {
   out_2864960269892235319[0] = 1;
   out_2864960269892235319[1] = 0;
   out_2864960269892235319[2] = 0;
   out_2864960269892235319[3] = 0;
   out_2864960269892235319[4] = 0;
   out_2864960269892235319[5] = 0;
   out_2864960269892235319[6] = 0;
   out_2864960269892235319[7] = 0;
   out_2864960269892235319[8] = 0;
   out_2864960269892235319[9] = 0;
   out_2864960269892235319[10] = 0;
   out_2864960269892235319[11] = 0;
   out_2864960269892235319[12] = 0;
   out_2864960269892235319[13] = 0;
   out_2864960269892235319[14] = 0;
   out_2864960269892235319[15] = 0;
   out_2864960269892235319[16] = 0;
   out_2864960269892235319[17] = 0;
   out_2864960269892235319[18] = 0;
   out_2864960269892235319[19] = 0;
   out_2864960269892235319[20] = 0;
   out_2864960269892235319[21] = 0;
   out_2864960269892235319[22] = 0;
   out_2864960269892235319[23] = 1;
   out_2864960269892235319[24] = 0;
   out_2864960269892235319[25] = 0;
   out_2864960269892235319[26] = 0;
   out_2864960269892235319[27] = 0;
   out_2864960269892235319[28] = 0;
   out_2864960269892235319[29] = 0;
   out_2864960269892235319[30] = 0;
   out_2864960269892235319[31] = 0;
   out_2864960269892235319[32] = 0;
   out_2864960269892235319[33] = 0;
   out_2864960269892235319[34] = 0;
   out_2864960269892235319[35] = 0;
   out_2864960269892235319[36] = 0;
   out_2864960269892235319[37] = 0;
   out_2864960269892235319[38] = 0;
   out_2864960269892235319[39] = 0;
   out_2864960269892235319[40] = 0;
   out_2864960269892235319[41] = 0;
   out_2864960269892235319[42] = 0;
   out_2864960269892235319[43] = 0;
   out_2864960269892235319[44] = 0;
   out_2864960269892235319[45] = 0;
   out_2864960269892235319[46] = 1;
   out_2864960269892235319[47] = 0;
   out_2864960269892235319[48] = 0;
   out_2864960269892235319[49] = 0;
   out_2864960269892235319[50] = 0;
   out_2864960269892235319[51] = 0;
   out_2864960269892235319[52] = 0;
   out_2864960269892235319[53] = 0;
   out_2864960269892235319[54] = 0;
   out_2864960269892235319[55] = 0;
   out_2864960269892235319[56] = 0;
   out_2864960269892235319[57] = 0;
   out_2864960269892235319[58] = 0;
   out_2864960269892235319[59] = 0;
   out_2864960269892235319[60] = 0;
   out_2864960269892235319[61] = 0;
   out_2864960269892235319[62] = 0;
   out_2864960269892235319[63] = 0;
   out_2864960269892235319[64] = 0;
   out_2864960269892235319[65] = 0;
}
void h_35(double *state, double *unused, double *out_7997807198617791916) {
   out_7997807198617791916[0] = state[7];
   out_7997807198617791916[1] = state[8];
   out_7997807198617791916[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5833863369401975925) {
   out_5833863369401975925[0] = 0;
   out_5833863369401975925[1] = 0;
   out_5833863369401975925[2] = 0;
   out_5833863369401975925[3] = 0;
   out_5833863369401975925[4] = 0;
   out_5833863369401975925[5] = 0;
   out_5833863369401975925[6] = 0;
   out_5833863369401975925[7] = 1;
   out_5833863369401975925[8] = 0;
   out_5833863369401975925[9] = 0;
   out_5833863369401975925[10] = 0;
   out_5833863369401975925[11] = 0;
   out_5833863369401975925[12] = 0;
   out_5833863369401975925[13] = 0;
   out_5833863369401975925[14] = 0;
   out_5833863369401975925[15] = 0;
   out_5833863369401975925[16] = 0;
   out_5833863369401975925[17] = 0;
   out_5833863369401975925[18] = 0;
   out_5833863369401975925[19] = 0;
   out_5833863369401975925[20] = 0;
   out_5833863369401975925[21] = 0;
   out_5833863369401975925[22] = 0;
   out_5833863369401975925[23] = 0;
   out_5833863369401975925[24] = 0;
   out_5833863369401975925[25] = 0;
   out_5833863369401975925[26] = 0;
   out_5833863369401975925[27] = 0;
   out_5833863369401975925[28] = 0;
   out_5833863369401975925[29] = 0;
   out_5833863369401975925[30] = 1;
   out_5833863369401975925[31] = 0;
   out_5833863369401975925[32] = 0;
   out_5833863369401975925[33] = 0;
   out_5833863369401975925[34] = 0;
   out_5833863369401975925[35] = 0;
   out_5833863369401975925[36] = 0;
   out_5833863369401975925[37] = 0;
   out_5833863369401975925[38] = 0;
   out_5833863369401975925[39] = 0;
   out_5833863369401975925[40] = 0;
   out_5833863369401975925[41] = 0;
   out_5833863369401975925[42] = 0;
   out_5833863369401975925[43] = 0;
   out_5833863369401975925[44] = 0;
   out_5833863369401975925[45] = 0;
   out_5833863369401975925[46] = 0;
   out_5833863369401975925[47] = 0;
   out_5833863369401975925[48] = 0;
   out_5833863369401975925[49] = 0;
   out_5833863369401975925[50] = 0;
   out_5833863369401975925[51] = 0;
   out_5833863369401975925[52] = 0;
   out_5833863369401975925[53] = 1;
   out_5833863369401975925[54] = 0;
   out_5833863369401975925[55] = 0;
   out_5833863369401975925[56] = 0;
   out_5833863369401975925[57] = 0;
   out_5833863369401975925[58] = 0;
   out_5833863369401975925[59] = 0;
   out_5833863369401975925[60] = 0;
   out_5833863369401975925[61] = 0;
   out_5833863369401975925[62] = 0;
   out_5833863369401975925[63] = 0;
   out_5833863369401975925[64] = 0;
   out_5833863369401975925[65] = 0;
}
void h_32(double *state, double *unused, double *out_4122265439760215713) {
   out_4122265439760215713[0] = state[3];
   out_4122265439760215713[1] = state[4];
   out_4122265439760215713[2] = state[5];
   out_4122265439760215713[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8720344792250430421) {
   out_8720344792250430421[0] = 0;
   out_8720344792250430421[1] = 0;
   out_8720344792250430421[2] = 0;
   out_8720344792250430421[3] = 1;
   out_8720344792250430421[4] = 0;
   out_8720344792250430421[5] = 0;
   out_8720344792250430421[6] = 0;
   out_8720344792250430421[7] = 0;
   out_8720344792250430421[8] = 0;
   out_8720344792250430421[9] = 0;
   out_8720344792250430421[10] = 0;
   out_8720344792250430421[11] = 0;
   out_8720344792250430421[12] = 0;
   out_8720344792250430421[13] = 0;
   out_8720344792250430421[14] = 0;
   out_8720344792250430421[15] = 0;
   out_8720344792250430421[16] = 0;
   out_8720344792250430421[17] = 0;
   out_8720344792250430421[18] = 0;
   out_8720344792250430421[19] = 0;
   out_8720344792250430421[20] = 0;
   out_8720344792250430421[21] = 0;
   out_8720344792250430421[22] = 0;
   out_8720344792250430421[23] = 0;
   out_8720344792250430421[24] = 0;
   out_8720344792250430421[25] = 0;
   out_8720344792250430421[26] = 1;
   out_8720344792250430421[27] = 0;
   out_8720344792250430421[28] = 0;
   out_8720344792250430421[29] = 0;
   out_8720344792250430421[30] = 0;
   out_8720344792250430421[31] = 0;
   out_8720344792250430421[32] = 0;
   out_8720344792250430421[33] = 0;
   out_8720344792250430421[34] = 0;
   out_8720344792250430421[35] = 0;
   out_8720344792250430421[36] = 0;
   out_8720344792250430421[37] = 0;
   out_8720344792250430421[38] = 0;
   out_8720344792250430421[39] = 0;
   out_8720344792250430421[40] = 0;
   out_8720344792250430421[41] = 0;
   out_8720344792250430421[42] = 0;
   out_8720344792250430421[43] = 0;
   out_8720344792250430421[44] = 0;
   out_8720344792250430421[45] = 0;
   out_8720344792250430421[46] = 0;
   out_8720344792250430421[47] = 0;
   out_8720344792250430421[48] = 0;
   out_8720344792250430421[49] = 1;
   out_8720344792250430421[50] = 0;
   out_8720344792250430421[51] = 0;
   out_8720344792250430421[52] = 0;
   out_8720344792250430421[53] = 0;
   out_8720344792250430421[54] = 0;
   out_8720344792250430421[55] = 0;
   out_8720344792250430421[56] = 0;
   out_8720344792250430421[57] = 0;
   out_8720344792250430421[58] = 0;
   out_8720344792250430421[59] = 0;
   out_8720344792250430421[60] = 0;
   out_8720344792250430421[61] = 0;
   out_8720344792250430421[62] = 0;
   out_8720344792250430421[63] = 0;
   out_8720344792250430421[64] = 0;
   out_8720344792250430421[65] = 0;
   out_8720344792250430421[66] = 0;
   out_8720344792250430421[67] = 0;
   out_8720344792250430421[68] = 0;
   out_8720344792250430421[69] = 0;
   out_8720344792250430421[70] = 0;
   out_8720344792250430421[71] = 0;
   out_8720344792250430421[72] = 1;
   out_8720344792250430421[73] = 0;
   out_8720344792250430421[74] = 0;
   out_8720344792250430421[75] = 0;
   out_8720344792250430421[76] = 0;
   out_8720344792250430421[77] = 0;
   out_8720344792250430421[78] = 0;
   out_8720344792250430421[79] = 0;
   out_8720344792250430421[80] = 0;
   out_8720344792250430421[81] = 0;
   out_8720344792250430421[82] = 0;
   out_8720344792250430421[83] = 0;
   out_8720344792250430421[84] = 0;
   out_8720344792250430421[85] = 0;
   out_8720344792250430421[86] = 0;
   out_8720344792250430421[87] = 0;
}
void h_13(double *state, double *unused, double *out_5889941460073324800) {
   out_5889941460073324800[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5889941460073324800[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5889941460073324800[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4874733410392409137) {
   out_4874733410392409137[0] = 0;
   out_4874733410392409137[1] = 0;
   out_4874733410392409137[2] = 0;
   out_4874733410392409137[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4874733410392409137[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4874733410392409137[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4874733410392409137[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4874733410392409137[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4874733410392409137[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4874733410392409137[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4874733410392409137[10] = 0;
   out_4874733410392409137[11] = 0;
   out_4874733410392409137[12] = 0;
   out_4874733410392409137[13] = 0;
   out_4874733410392409137[14] = 0;
   out_4874733410392409137[15] = 0;
   out_4874733410392409137[16] = 0;
   out_4874733410392409137[17] = 0;
   out_4874733410392409137[18] = 0;
   out_4874733410392409137[19] = 0;
   out_4874733410392409137[20] = 0;
   out_4874733410392409137[21] = 0;
   out_4874733410392409137[22] = 0;
   out_4874733410392409137[23] = 0;
   out_4874733410392409137[24] = 0;
   out_4874733410392409137[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4874733410392409137[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4874733410392409137[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4874733410392409137[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4874733410392409137[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4874733410392409137[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4874733410392409137[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4874733410392409137[32] = 0;
   out_4874733410392409137[33] = 0;
   out_4874733410392409137[34] = 0;
   out_4874733410392409137[35] = 0;
   out_4874733410392409137[36] = 0;
   out_4874733410392409137[37] = 0;
   out_4874733410392409137[38] = 0;
   out_4874733410392409137[39] = 0;
   out_4874733410392409137[40] = 0;
   out_4874733410392409137[41] = 0;
   out_4874733410392409137[42] = 0;
   out_4874733410392409137[43] = 0;
   out_4874733410392409137[44] = 0;
   out_4874733410392409137[45] = 0;
   out_4874733410392409137[46] = 0;
   out_4874733410392409137[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4874733410392409137[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4874733410392409137[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4874733410392409137[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4874733410392409137[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4874733410392409137[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4874733410392409137[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4874733410392409137[54] = 0;
   out_4874733410392409137[55] = 0;
   out_4874733410392409137[56] = 0;
   out_4874733410392409137[57] = 0;
   out_4874733410392409137[58] = 0;
   out_4874733410392409137[59] = 0;
   out_4874733410392409137[60] = 0;
   out_4874733410392409137[61] = 0;
   out_4874733410392409137[62] = 0;
   out_4874733410392409137[63] = 0;
   out_4874733410392409137[64] = 0;
   out_4874733410392409137[65] = 0;
}
void h_14(double *state, double *unused, double *out_7087070483927245922) {
   out_7087070483927245922[0] = state[10];
   out_7087070483927245922[1] = state[11];
   out_7087070483927245922[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1913306491510135831) {
   out_1913306491510135831[0] = 0;
   out_1913306491510135831[1] = 0;
   out_1913306491510135831[2] = 0;
   out_1913306491510135831[3] = 0;
   out_1913306491510135831[4] = 0;
   out_1913306491510135831[5] = 0;
   out_1913306491510135831[6] = 0;
   out_1913306491510135831[7] = 0;
   out_1913306491510135831[8] = 0;
   out_1913306491510135831[9] = 0;
   out_1913306491510135831[10] = 1;
   out_1913306491510135831[11] = 0;
   out_1913306491510135831[12] = 0;
   out_1913306491510135831[13] = 0;
   out_1913306491510135831[14] = 0;
   out_1913306491510135831[15] = 0;
   out_1913306491510135831[16] = 0;
   out_1913306491510135831[17] = 0;
   out_1913306491510135831[18] = 0;
   out_1913306491510135831[19] = 0;
   out_1913306491510135831[20] = 0;
   out_1913306491510135831[21] = 0;
   out_1913306491510135831[22] = 0;
   out_1913306491510135831[23] = 0;
   out_1913306491510135831[24] = 0;
   out_1913306491510135831[25] = 0;
   out_1913306491510135831[26] = 0;
   out_1913306491510135831[27] = 0;
   out_1913306491510135831[28] = 0;
   out_1913306491510135831[29] = 0;
   out_1913306491510135831[30] = 0;
   out_1913306491510135831[31] = 0;
   out_1913306491510135831[32] = 0;
   out_1913306491510135831[33] = 1;
   out_1913306491510135831[34] = 0;
   out_1913306491510135831[35] = 0;
   out_1913306491510135831[36] = 0;
   out_1913306491510135831[37] = 0;
   out_1913306491510135831[38] = 0;
   out_1913306491510135831[39] = 0;
   out_1913306491510135831[40] = 0;
   out_1913306491510135831[41] = 0;
   out_1913306491510135831[42] = 0;
   out_1913306491510135831[43] = 0;
   out_1913306491510135831[44] = 0;
   out_1913306491510135831[45] = 0;
   out_1913306491510135831[46] = 0;
   out_1913306491510135831[47] = 0;
   out_1913306491510135831[48] = 0;
   out_1913306491510135831[49] = 0;
   out_1913306491510135831[50] = 0;
   out_1913306491510135831[51] = 0;
   out_1913306491510135831[52] = 0;
   out_1913306491510135831[53] = 0;
   out_1913306491510135831[54] = 0;
   out_1913306491510135831[55] = 0;
   out_1913306491510135831[56] = 1;
   out_1913306491510135831[57] = 0;
   out_1913306491510135831[58] = 0;
   out_1913306491510135831[59] = 0;
   out_1913306491510135831[60] = 0;
   out_1913306491510135831[61] = 0;
   out_1913306491510135831[62] = 0;
   out_1913306491510135831[63] = 0;
   out_1913306491510135831[64] = 0;
   out_1913306491510135831[65] = 0;
}
void h_33(double *state, double *unused, double *out_2652568407664332798) {
   out_2652568407664332798[0] = state[16];
   out_2652568407664332798[1] = state[17];
   out_2652568407664332798[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2683306364763118321) {
   out_2683306364763118321[0] = 0;
   out_2683306364763118321[1] = 0;
   out_2683306364763118321[2] = 0;
   out_2683306364763118321[3] = 0;
   out_2683306364763118321[4] = 0;
   out_2683306364763118321[5] = 0;
   out_2683306364763118321[6] = 0;
   out_2683306364763118321[7] = 0;
   out_2683306364763118321[8] = 0;
   out_2683306364763118321[9] = 0;
   out_2683306364763118321[10] = 0;
   out_2683306364763118321[11] = 0;
   out_2683306364763118321[12] = 0;
   out_2683306364763118321[13] = 0;
   out_2683306364763118321[14] = 0;
   out_2683306364763118321[15] = 0;
   out_2683306364763118321[16] = 1;
   out_2683306364763118321[17] = 0;
   out_2683306364763118321[18] = 0;
   out_2683306364763118321[19] = 0;
   out_2683306364763118321[20] = 0;
   out_2683306364763118321[21] = 0;
   out_2683306364763118321[22] = 0;
   out_2683306364763118321[23] = 0;
   out_2683306364763118321[24] = 0;
   out_2683306364763118321[25] = 0;
   out_2683306364763118321[26] = 0;
   out_2683306364763118321[27] = 0;
   out_2683306364763118321[28] = 0;
   out_2683306364763118321[29] = 0;
   out_2683306364763118321[30] = 0;
   out_2683306364763118321[31] = 0;
   out_2683306364763118321[32] = 0;
   out_2683306364763118321[33] = 0;
   out_2683306364763118321[34] = 0;
   out_2683306364763118321[35] = 0;
   out_2683306364763118321[36] = 0;
   out_2683306364763118321[37] = 0;
   out_2683306364763118321[38] = 0;
   out_2683306364763118321[39] = 1;
   out_2683306364763118321[40] = 0;
   out_2683306364763118321[41] = 0;
   out_2683306364763118321[42] = 0;
   out_2683306364763118321[43] = 0;
   out_2683306364763118321[44] = 0;
   out_2683306364763118321[45] = 0;
   out_2683306364763118321[46] = 0;
   out_2683306364763118321[47] = 0;
   out_2683306364763118321[48] = 0;
   out_2683306364763118321[49] = 0;
   out_2683306364763118321[50] = 0;
   out_2683306364763118321[51] = 0;
   out_2683306364763118321[52] = 0;
   out_2683306364763118321[53] = 0;
   out_2683306364763118321[54] = 0;
   out_2683306364763118321[55] = 0;
   out_2683306364763118321[56] = 0;
   out_2683306364763118321[57] = 0;
   out_2683306364763118321[58] = 0;
   out_2683306364763118321[59] = 0;
   out_2683306364763118321[60] = 0;
   out_2683306364763118321[61] = 0;
   out_2683306364763118321[62] = 1;
   out_2683306364763118321[63] = 0;
   out_2683306364763118321[64] = 0;
   out_2683306364763118321[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4988174483772121019) {
  H(in_vec, out_4988174483772121019);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_981480701005785015) {
  err_fun(nom_x, delta_x, out_981480701005785015);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7691555028347121894) {
  inv_err_fun(nom_x, true_x, out_7691555028347121894);
}
void live_H_mod_fun(double *state, double *out_3170047989686754658) {
  H_mod_fun(state, out_3170047989686754658);
}
void live_f_fun(double *state, double dt, double *out_8204218452068835951) {
  f_fun(state,  dt, out_8204218452068835951);
}
void live_F_fun(double *state, double dt, double *out_5970024142781703028) {
  F_fun(state,  dt, out_5970024142781703028);
}
void live_h_4(double *state, double *unused, double *out_5068762038946320161) {
  h_4(state, unused, out_5068762038946320161);
}
void live_H_4(double *state, double *unused, double *out_9200525426774583301) {
  H_4(state, unused, out_9200525426774583301);
}
void live_h_9(double *state, double *unused, double *out_7087070483927245922) {
  h_9(state, unused, out_7087070483927245922);
}
void live_H_9(double *state, double *unused, double *out_1913306491510135831) {
  H_9(state, unused, out_1913306491510135831);
}
void live_h_10(double *state, double *unused, double *out_4000295638352727946) {
  h_10(state, unused, out_4000295638352727946);
}
void live_H_10(double *state, double *unused, double *out_9069560577065108470) {
  H_10(state, unused, out_9069560577065108470);
}
void live_h_12(double *state, double *unused, double *out_4084887904843798783) {
  h_12(state, unused, out_4084887904843798783);
}
void live_H_12(double *state, double *unused, double *out_2864960269892235319) {
  H_12(state, unused, out_2864960269892235319);
}
void live_h_35(double *state, double *unused, double *out_7997807198617791916) {
  h_35(state, unused, out_7997807198617791916);
}
void live_H_35(double *state, double *unused, double *out_5833863369401975925) {
  H_35(state, unused, out_5833863369401975925);
}
void live_h_32(double *state, double *unused, double *out_4122265439760215713) {
  h_32(state, unused, out_4122265439760215713);
}
void live_H_32(double *state, double *unused, double *out_8720344792250430421) {
  H_32(state, unused, out_8720344792250430421);
}
void live_h_13(double *state, double *unused, double *out_5889941460073324800) {
  h_13(state, unused, out_5889941460073324800);
}
void live_H_13(double *state, double *unused, double *out_4874733410392409137) {
  H_13(state, unused, out_4874733410392409137);
}
void live_h_14(double *state, double *unused, double *out_7087070483927245922) {
  h_14(state, unused, out_7087070483927245922);
}
void live_H_14(double *state, double *unused, double *out_1913306491510135831) {
  H_14(state, unused, out_1913306491510135831);
}
void live_h_33(double *state, double *unused, double *out_2652568407664332798) {
  h_33(state, unused, out_2652568407664332798);
}
void live_H_33(double *state, double *unused, double *out_2683306364763118321) {
  H_33(state, unused, out_2683306364763118321);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
