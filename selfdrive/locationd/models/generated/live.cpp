#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1705590173802957792) {
   out_1705590173802957792[0] = 0;
   out_1705590173802957792[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1705590173802957792[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1705590173802957792[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1705590173802957792[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1705590173802957792[5] = -sin(in_vec[1]);
   out_1705590173802957792[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1705590173802957792[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1705590173802957792[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1705590173802957792[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1705590173802957792[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1705590173802957792[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1705590173802957792[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1705590173802957792[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1705590173802957792[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1705590173802957792[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1705590173802957792[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1705590173802957792[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2360402206574617959) {
   out_2360402206574617959[0] = delta_x[0] + nom_x[0];
   out_2360402206574617959[1] = delta_x[1] + nom_x[1];
   out_2360402206574617959[2] = delta_x[2] + nom_x[2];
   out_2360402206574617959[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2360402206574617959[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2360402206574617959[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2360402206574617959[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2360402206574617959[7] = delta_x[6] + nom_x[7];
   out_2360402206574617959[8] = delta_x[7] + nom_x[8];
   out_2360402206574617959[9] = delta_x[8] + nom_x[9];
   out_2360402206574617959[10] = delta_x[9] + nom_x[10];
   out_2360402206574617959[11] = delta_x[10] + nom_x[11];
   out_2360402206574617959[12] = delta_x[11] + nom_x[12];
   out_2360402206574617959[13] = delta_x[12] + nom_x[13];
   out_2360402206574617959[14] = delta_x[13] + nom_x[14];
   out_2360402206574617959[15] = delta_x[14] + nom_x[15];
   out_2360402206574617959[16] = delta_x[15] + nom_x[16];
   out_2360402206574617959[17] = delta_x[16] + nom_x[17];
   out_2360402206574617959[18] = delta_x[17] + nom_x[18];
   out_2360402206574617959[19] = delta_x[18] + nom_x[19];
   out_2360402206574617959[20] = delta_x[19] + nom_x[20];
   out_2360402206574617959[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4539811509280113021) {
   out_4539811509280113021[0] = -nom_x[0] + true_x[0];
   out_4539811509280113021[1] = -nom_x[1] + true_x[1];
   out_4539811509280113021[2] = -nom_x[2] + true_x[2];
   out_4539811509280113021[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4539811509280113021[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4539811509280113021[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4539811509280113021[6] = -nom_x[7] + true_x[7];
   out_4539811509280113021[7] = -nom_x[8] + true_x[8];
   out_4539811509280113021[8] = -nom_x[9] + true_x[9];
   out_4539811509280113021[9] = -nom_x[10] + true_x[10];
   out_4539811509280113021[10] = -nom_x[11] + true_x[11];
   out_4539811509280113021[11] = -nom_x[12] + true_x[12];
   out_4539811509280113021[12] = -nom_x[13] + true_x[13];
   out_4539811509280113021[13] = -nom_x[14] + true_x[14];
   out_4539811509280113021[14] = -nom_x[15] + true_x[15];
   out_4539811509280113021[15] = -nom_x[16] + true_x[16];
   out_4539811509280113021[16] = -nom_x[17] + true_x[17];
   out_4539811509280113021[17] = -nom_x[18] + true_x[18];
   out_4539811509280113021[18] = -nom_x[19] + true_x[19];
   out_4539811509280113021[19] = -nom_x[20] + true_x[20];
   out_4539811509280113021[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3998354333387872453) {
   out_3998354333387872453[0] = 1.0;
   out_3998354333387872453[1] = 0;
   out_3998354333387872453[2] = 0;
   out_3998354333387872453[3] = 0;
   out_3998354333387872453[4] = 0;
   out_3998354333387872453[5] = 0;
   out_3998354333387872453[6] = 0;
   out_3998354333387872453[7] = 0;
   out_3998354333387872453[8] = 0;
   out_3998354333387872453[9] = 0;
   out_3998354333387872453[10] = 0;
   out_3998354333387872453[11] = 0;
   out_3998354333387872453[12] = 0;
   out_3998354333387872453[13] = 0;
   out_3998354333387872453[14] = 0;
   out_3998354333387872453[15] = 0;
   out_3998354333387872453[16] = 0;
   out_3998354333387872453[17] = 0;
   out_3998354333387872453[18] = 0;
   out_3998354333387872453[19] = 0;
   out_3998354333387872453[20] = 0;
   out_3998354333387872453[21] = 0;
   out_3998354333387872453[22] = 1.0;
   out_3998354333387872453[23] = 0;
   out_3998354333387872453[24] = 0;
   out_3998354333387872453[25] = 0;
   out_3998354333387872453[26] = 0;
   out_3998354333387872453[27] = 0;
   out_3998354333387872453[28] = 0;
   out_3998354333387872453[29] = 0;
   out_3998354333387872453[30] = 0;
   out_3998354333387872453[31] = 0;
   out_3998354333387872453[32] = 0;
   out_3998354333387872453[33] = 0;
   out_3998354333387872453[34] = 0;
   out_3998354333387872453[35] = 0;
   out_3998354333387872453[36] = 0;
   out_3998354333387872453[37] = 0;
   out_3998354333387872453[38] = 0;
   out_3998354333387872453[39] = 0;
   out_3998354333387872453[40] = 0;
   out_3998354333387872453[41] = 0;
   out_3998354333387872453[42] = 0;
   out_3998354333387872453[43] = 0;
   out_3998354333387872453[44] = 1.0;
   out_3998354333387872453[45] = 0;
   out_3998354333387872453[46] = 0;
   out_3998354333387872453[47] = 0;
   out_3998354333387872453[48] = 0;
   out_3998354333387872453[49] = 0;
   out_3998354333387872453[50] = 0;
   out_3998354333387872453[51] = 0;
   out_3998354333387872453[52] = 0;
   out_3998354333387872453[53] = 0;
   out_3998354333387872453[54] = 0;
   out_3998354333387872453[55] = 0;
   out_3998354333387872453[56] = 0;
   out_3998354333387872453[57] = 0;
   out_3998354333387872453[58] = 0;
   out_3998354333387872453[59] = 0;
   out_3998354333387872453[60] = 0;
   out_3998354333387872453[61] = 0;
   out_3998354333387872453[62] = 0;
   out_3998354333387872453[63] = 0;
   out_3998354333387872453[64] = 0;
   out_3998354333387872453[65] = 0;
   out_3998354333387872453[66] = -0.5*state[4];
   out_3998354333387872453[67] = -0.5*state[5];
   out_3998354333387872453[68] = -0.5*state[6];
   out_3998354333387872453[69] = 0;
   out_3998354333387872453[70] = 0;
   out_3998354333387872453[71] = 0;
   out_3998354333387872453[72] = 0;
   out_3998354333387872453[73] = 0;
   out_3998354333387872453[74] = 0;
   out_3998354333387872453[75] = 0;
   out_3998354333387872453[76] = 0;
   out_3998354333387872453[77] = 0;
   out_3998354333387872453[78] = 0;
   out_3998354333387872453[79] = 0;
   out_3998354333387872453[80] = 0;
   out_3998354333387872453[81] = 0;
   out_3998354333387872453[82] = 0;
   out_3998354333387872453[83] = 0;
   out_3998354333387872453[84] = 0;
   out_3998354333387872453[85] = 0;
   out_3998354333387872453[86] = 0;
   out_3998354333387872453[87] = 0.5*state[3];
   out_3998354333387872453[88] = 0.5*state[6];
   out_3998354333387872453[89] = -0.5*state[5];
   out_3998354333387872453[90] = 0;
   out_3998354333387872453[91] = 0;
   out_3998354333387872453[92] = 0;
   out_3998354333387872453[93] = 0;
   out_3998354333387872453[94] = 0;
   out_3998354333387872453[95] = 0;
   out_3998354333387872453[96] = 0;
   out_3998354333387872453[97] = 0;
   out_3998354333387872453[98] = 0;
   out_3998354333387872453[99] = 0;
   out_3998354333387872453[100] = 0;
   out_3998354333387872453[101] = 0;
   out_3998354333387872453[102] = 0;
   out_3998354333387872453[103] = 0;
   out_3998354333387872453[104] = 0;
   out_3998354333387872453[105] = 0;
   out_3998354333387872453[106] = 0;
   out_3998354333387872453[107] = 0;
   out_3998354333387872453[108] = -0.5*state[6];
   out_3998354333387872453[109] = 0.5*state[3];
   out_3998354333387872453[110] = 0.5*state[4];
   out_3998354333387872453[111] = 0;
   out_3998354333387872453[112] = 0;
   out_3998354333387872453[113] = 0;
   out_3998354333387872453[114] = 0;
   out_3998354333387872453[115] = 0;
   out_3998354333387872453[116] = 0;
   out_3998354333387872453[117] = 0;
   out_3998354333387872453[118] = 0;
   out_3998354333387872453[119] = 0;
   out_3998354333387872453[120] = 0;
   out_3998354333387872453[121] = 0;
   out_3998354333387872453[122] = 0;
   out_3998354333387872453[123] = 0;
   out_3998354333387872453[124] = 0;
   out_3998354333387872453[125] = 0;
   out_3998354333387872453[126] = 0;
   out_3998354333387872453[127] = 0;
   out_3998354333387872453[128] = 0;
   out_3998354333387872453[129] = 0.5*state[5];
   out_3998354333387872453[130] = -0.5*state[4];
   out_3998354333387872453[131] = 0.5*state[3];
   out_3998354333387872453[132] = 0;
   out_3998354333387872453[133] = 0;
   out_3998354333387872453[134] = 0;
   out_3998354333387872453[135] = 0;
   out_3998354333387872453[136] = 0;
   out_3998354333387872453[137] = 0;
   out_3998354333387872453[138] = 0;
   out_3998354333387872453[139] = 0;
   out_3998354333387872453[140] = 0;
   out_3998354333387872453[141] = 0;
   out_3998354333387872453[142] = 0;
   out_3998354333387872453[143] = 0;
   out_3998354333387872453[144] = 0;
   out_3998354333387872453[145] = 0;
   out_3998354333387872453[146] = 0;
   out_3998354333387872453[147] = 0;
   out_3998354333387872453[148] = 0;
   out_3998354333387872453[149] = 0;
   out_3998354333387872453[150] = 0;
   out_3998354333387872453[151] = 0;
   out_3998354333387872453[152] = 0;
   out_3998354333387872453[153] = 1.0;
   out_3998354333387872453[154] = 0;
   out_3998354333387872453[155] = 0;
   out_3998354333387872453[156] = 0;
   out_3998354333387872453[157] = 0;
   out_3998354333387872453[158] = 0;
   out_3998354333387872453[159] = 0;
   out_3998354333387872453[160] = 0;
   out_3998354333387872453[161] = 0;
   out_3998354333387872453[162] = 0;
   out_3998354333387872453[163] = 0;
   out_3998354333387872453[164] = 0;
   out_3998354333387872453[165] = 0;
   out_3998354333387872453[166] = 0;
   out_3998354333387872453[167] = 0;
   out_3998354333387872453[168] = 0;
   out_3998354333387872453[169] = 0;
   out_3998354333387872453[170] = 0;
   out_3998354333387872453[171] = 0;
   out_3998354333387872453[172] = 0;
   out_3998354333387872453[173] = 0;
   out_3998354333387872453[174] = 0;
   out_3998354333387872453[175] = 1.0;
   out_3998354333387872453[176] = 0;
   out_3998354333387872453[177] = 0;
   out_3998354333387872453[178] = 0;
   out_3998354333387872453[179] = 0;
   out_3998354333387872453[180] = 0;
   out_3998354333387872453[181] = 0;
   out_3998354333387872453[182] = 0;
   out_3998354333387872453[183] = 0;
   out_3998354333387872453[184] = 0;
   out_3998354333387872453[185] = 0;
   out_3998354333387872453[186] = 0;
   out_3998354333387872453[187] = 0;
   out_3998354333387872453[188] = 0;
   out_3998354333387872453[189] = 0;
   out_3998354333387872453[190] = 0;
   out_3998354333387872453[191] = 0;
   out_3998354333387872453[192] = 0;
   out_3998354333387872453[193] = 0;
   out_3998354333387872453[194] = 0;
   out_3998354333387872453[195] = 0;
   out_3998354333387872453[196] = 0;
   out_3998354333387872453[197] = 1.0;
   out_3998354333387872453[198] = 0;
   out_3998354333387872453[199] = 0;
   out_3998354333387872453[200] = 0;
   out_3998354333387872453[201] = 0;
   out_3998354333387872453[202] = 0;
   out_3998354333387872453[203] = 0;
   out_3998354333387872453[204] = 0;
   out_3998354333387872453[205] = 0;
   out_3998354333387872453[206] = 0;
   out_3998354333387872453[207] = 0;
   out_3998354333387872453[208] = 0;
   out_3998354333387872453[209] = 0;
   out_3998354333387872453[210] = 0;
   out_3998354333387872453[211] = 0;
   out_3998354333387872453[212] = 0;
   out_3998354333387872453[213] = 0;
   out_3998354333387872453[214] = 0;
   out_3998354333387872453[215] = 0;
   out_3998354333387872453[216] = 0;
   out_3998354333387872453[217] = 0;
   out_3998354333387872453[218] = 0;
   out_3998354333387872453[219] = 1.0;
   out_3998354333387872453[220] = 0;
   out_3998354333387872453[221] = 0;
   out_3998354333387872453[222] = 0;
   out_3998354333387872453[223] = 0;
   out_3998354333387872453[224] = 0;
   out_3998354333387872453[225] = 0;
   out_3998354333387872453[226] = 0;
   out_3998354333387872453[227] = 0;
   out_3998354333387872453[228] = 0;
   out_3998354333387872453[229] = 0;
   out_3998354333387872453[230] = 0;
   out_3998354333387872453[231] = 0;
   out_3998354333387872453[232] = 0;
   out_3998354333387872453[233] = 0;
   out_3998354333387872453[234] = 0;
   out_3998354333387872453[235] = 0;
   out_3998354333387872453[236] = 0;
   out_3998354333387872453[237] = 0;
   out_3998354333387872453[238] = 0;
   out_3998354333387872453[239] = 0;
   out_3998354333387872453[240] = 0;
   out_3998354333387872453[241] = 1.0;
   out_3998354333387872453[242] = 0;
   out_3998354333387872453[243] = 0;
   out_3998354333387872453[244] = 0;
   out_3998354333387872453[245] = 0;
   out_3998354333387872453[246] = 0;
   out_3998354333387872453[247] = 0;
   out_3998354333387872453[248] = 0;
   out_3998354333387872453[249] = 0;
   out_3998354333387872453[250] = 0;
   out_3998354333387872453[251] = 0;
   out_3998354333387872453[252] = 0;
   out_3998354333387872453[253] = 0;
   out_3998354333387872453[254] = 0;
   out_3998354333387872453[255] = 0;
   out_3998354333387872453[256] = 0;
   out_3998354333387872453[257] = 0;
   out_3998354333387872453[258] = 0;
   out_3998354333387872453[259] = 0;
   out_3998354333387872453[260] = 0;
   out_3998354333387872453[261] = 0;
   out_3998354333387872453[262] = 0;
   out_3998354333387872453[263] = 1.0;
   out_3998354333387872453[264] = 0;
   out_3998354333387872453[265] = 0;
   out_3998354333387872453[266] = 0;
   out_3998354333387872453[267] = 0;
   out_3998354333387872453[268] = 0;
   out_3998354333387872453[269] = 0;
   out_3998354333387872453[270] = 0;
   out_3998354333387872453[271] = 0;
   out_3998354333387872453[272] = 0;
   out_3998354333387872453[273] = 0;
   out_3998354333387872453[274] = 0;
   out_3998354333387872453[275] = 0;
   out_3998354333387872453[276] = 0;
   out_3998354333387872453[277] = 0;
   out_3998354333387872453[278] = 0;
   out_3998354333387872453[279] = 0;
   out_3998354333387872453[280] = 0;
   out_3998354333387872453[281] = 0;
   out_3998354333387872453[282] = 0;
   out_3998354333387872453[283] = 0;
   out_3998354333387872453[284] = 0;
   out_3998354333387872453[285] = 1.0;
   out_3998354333387872453[286] = 0;
   out_3998354333387872453[287] = 0;
   out_3998354333387872453[288] = 0;
   out_3998354333387872453[289] = 0;
   out_3998354333387872453[290] = 0;
   out_3998354333387872453[291] = 0;
   out_3998354333387872453[292] = 0;
   out_3998354333387872453[293] = 0;
   out_3998354333387872453[294] = 0;
   out_3998354333387872453[295] = 0;
   out_3998354333387872453[296] = 0;
   out_3998354333387872453[297] = 0;
   out_3998354333387872453[298] = 0;
   out_3998354333387872453[299] = 0;
   out_3998354333387872453[300] = 0;
   out_3998354333387872453[301] = 0;
   out_3998354333387872453[302] = 0;
   out_3998354333387872453[303] = 0;
   out_3998354333387872453[304] = 0;
   out_3998354333387872453[305] = 0;
   out_3998354333387872453[306] = 0;
   out_3998354333387872453[307] = 1.0;
   out_3998354333387872453[308] = 0;
   out_3998354333387872453[309] = 0;
   out_3998354333387872453[310] = 0;
   out_3998354333387872453[311] = 0;
   out_3998354333387872453[312] = 0;
   out_3998354333387872453[313] = 0;
   out_3998354333387872453[314] = 0;
   out_3998354333387872453[315] = 0;
   out_3998354333387872453[316] = 0;
   out_3998354333387872453[317] = 0;
   out_3998354333387872453[318] = 0;
   out_3998354333387872453[319] = 0;
   out_3998354333387872453[320] = 0;
   out_3998354333387872453[321] = 0;
   out_3998354333387872453[322] = 0;
   out_3998354333387872453[323] = 0;
   out_3998354333387872453[324] = 0;
   out_3998354333387872453[325] = 0;
   out_3998354333387872453[326] = 0;
   out_3998354333387872453[327] = 0;
   out_3998354333387872453[328] = 0;
   out_3998354333387872453[329] = 1.0;
   out_3998354333387872453[330] = 0;
   out_3998354333387872453[331] = 0;
   out_3998354333387872453[332] = 0;
   out_3998354333387872453[333] = 0;
   out_3998354333387872453[334] = 0;
   out_3998354333387872453[335] = 0;
   out_3998354333387872453[336] = 0;
   out_3998354333387872453[337] = 0;
   out_3998354333387872453[338] = 0;
   out_3998354333387872453[339] = 0;
   out_3998354333387872453[340] = 0;
   out_3998354333387872453[341] = 0;
   out_3998354333387872453[342] = 0;
   out_3998354333387872453[343] = 0;
   out_3998354333387872453[344] = 0;
   out_3998354333387872453[345] = 0;
   out_3998354333387872453[346] = 0;
   out_3998354333387872453[347] = 0;
   out_3998354333387872453[348] = 0;
   out_3998354333387872453[349] = 0;
   out_3998354333387872453[350] = 0;
   out_3998354333387872453[351] = 1.0;
   out_3998354333387872453[352] = 0;
   out_3998354333387872453[353] = 0;
   out_3998354333387872453[354] = 0;
   out_3998354333387872453[355] = 0;
   out_3998354333387872453[356] = 0;
   out_3998354333387872453[357] = 0;
   out_3998354333387872453[358] = 0;
   out_3998354333387872453[359] = 0;
   out_3998354333387872453[360] = 0;
   out_3998354333387872453[361] = 0;
   out_3998354333387872453[362] = 0;
   out_3998354333387872453[363] = 0;
   out_3998354333387872453[364] = 0;
   out_3998354333387872453[365] = 0;
   out_3998354333387872453[366] = 0;
   out_3998354333387872453[367] = 0;
   out_3998354333387872453[368] = 0;
   out_3998354333387872453[369] = 0;
   out_3998354333387872453[370] = 0;
   out_3998354333387872453[371] = 0;
   out_3998354333387872453[372] = 0;
   out_3998354333387872453[373] = 1.0;
   out_3998354333387872453[374] = 0;
   out_3998354333387872453[375] = 0;
   out_3998354333387872453[376] = 0;
   out_3998354333387872453[377] = 0;
   out_3998354333387872453[378] = 0;
   out_3998354333387872453[379] = 0;
   out_3998354333387872453[380] = 0;
   out_3998354333387872453[381] = 0;
   out_3998354333387872453[382] = 0;
   out_3998354333387872453[383] = 0;
   out_3998354333387872453[384] = 0;
   out_3998354333387872453[385] = 0;
   out_3998354333387872453[386] = 0;
   out_3998354333387872453[387] = 0;
   out_3998354333387872453[388] = 0;
   out_3998354333387872453[389] = 0;
   out_3998354333387872453[390] = 0;
   out_3998354333387872453[391] = 0;
   out_3998354333387872453[392] = 0;
   out_3998354333387872453[393] = 0;
   out_3998354333387872453[394] = 0;
   out_3998354333387872453[395] = 1.0;
   out_3998354333387872453[396] = 0;
   out_3998354333387872453[397] = 0;
   out_3998354333387872453[398] = 0;
   out_3998354333387872453[399] = 0;
   out_3998354333387872453[400] = 0;
   out_3998354333387872453[401] = 0;
   out_3998354333387872453[402] = 0;
   out_3998354333387872453[403] = 0;
   out_3998354333387872453[404] = 0;
   out_3998354333387872453[405] = 0;
   out_3998354333387872453[406] = 0;
   out_3998354333387872453[407] = 0;
   out_3998354333387872453[408] = 0;
   out_3998354333387872453[409] = 0;
   out_3998354333387872453[410] = 0;
   out_3998354333387872453[411] = 0;
   out_3998354333387872453[412] = 0;
   out_3998354333387872453[413] = 0;
   out_3998354333387872453[414] = 0;
   out_3998354333387872453[415] = 0;
   out_3998354333387872453[416] = 0;
   out_3998354333387872453[417] = 1.0;
   out_3998354333387872453[418] = 0;
   out_3998354333387872453[419] = 0;
   out_3998354333387872453[420] = 0;
   out_3998354333387872453[421] = 0;
   out_3998354333387872453[422] = 0;
   out_3998354333387872453[423] = 0;
   out_3998354333387872453[424] = 0;
   out_3998354333387872453[425] = 0;
   out_3998354333387872453[426] = 0;
   out_3998354333387872453[427] = 0;
   out_3998354333387872453[428] = 0;
   out_3998354333387872453[429] = 0;
   out_3998354333387872453[430] = 0;
   out_3998354333387872453[431] = 0;
   out_3998354333387872453[432] = 0;
   out_3998354333387872453[433] = 0;
   out_3998354333387872453[434] = 0;
   out_3998354333387872453[435] = 0;
   out_3998354333387872453[436] = 0;
   out_3998354333387872453[437] = 0;
   out_3998354333387872453[438] = 0;
   out_3998354333387872453[439] = 1.0;
   out_3998354333387872453[440] = 0;
   out_3998354333387872453[441] = 0;
   out_3998354333387872453[442] = 0;
   out_3998354333387872453[443] = 0;
   out_3998354333387872453[444] = 0;
   out_3998354333387872453[445] = 0;
   out_3998354333387872453[446] = 0;
   out_3998354333387872453[447] = 0;
   out_3998354333387872453[448] = 0;
   out_3998354333387872453[449] = 0;
   out_3998354333387872453[450] = 0;
   out_3998354333387872453[451] = 0;
   out_3998354333387872453[452] = 0;
   out_3998354333387872453[453] = 0;
   out_3998354333387872453[454] = 0;
   out_3998354333387872453[455] = 0;
   out_3998354333387872453[456] = 0;
   out_3998354333387872453[457] = 0;
   out_3998354333387872453[458] = 0;
   out_3998354333387872453[459] = 0;
   out_3998354333387872453[460] = 0;
   out_3998354333387872453[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6164175281085870497) {
   out_6164175281085870497[0] = dt*state[7] + state[0];
   out_6164175281085870497[1] = dt*state[8] + state[1];
   out_6164175281085870497[2] = dt*state[9] + state[2];
   out_6164175281085870497[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6164175281085870497[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6164175281085870497[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6164175281085870497[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6164175281085870497[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6164175281085870497[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6164175281085870497[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6164175281085870497[10] = state[10];
   out_6164175281085870497[11] = state[11];
   out_6164175281085870497[12] = state[12];
   out_6164175281085870497[13] = state[13];
   out_6164175281085870497[14] = state[14];
   out_6164175281085870497[15] = state[15];
   out_6164175281085870497[16] = state[16];
   out_6164175281085870497[17] = state[17];
   out_6164175281085870497[18] = state[18];
   out_6164175281085870497[19] = state[19];
   out_6164175281085870497[20] = state[20];
   out_6164175281085870497[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4815907768218277041) {
   out_4815907768218277041[0] = 1;
   out_4815907768218277041[1] = 0;
   out_4815907768218277041[2] = 0;
   out_4815907768218277041[3] = 0;
   out_4815907768218277041[4] = 0;
   out_4815907768218277041[5] = 0;
   out_4815907768218277041[6] = dt;
   out_4815907768218277041[7] = 0;
   out_4815907768218277041[8] = 0;
   out_4815907768218277041[9] = 0;
   out_4815907768218277041[10] = 0;
   out_4815907768218277041[11] = 0;
   out_4815907768218277041[12] = 0;
   out_4815907768218277041[13] = 0;
   out_4815907768218277041[14] = 0;
   out_4815907768218277041[15] = 0;
   out_4815907768218277041[16] = 0;
   out_4815907768218277041[17] = 0;
   out_4815907768218277041[18] = 0;
   out_4815907768218277041[19] = 0;
   out_4815907768218277041[20] = 0;
   out_4815907768218277041[21] = 0;
   out_4815907768218277041[22] = 1;
   out_4815907768218277041[23] = 0;
   out_4815907768218277041[24] = 0;
   out_4815907768218277041[25] = 0;
   out_4815907768218277041[26] = 0;
   out_4815907768218277041[27] = 0;
   out_4815907768218277041[28] = dt;
   out_4815907768218277041[29] = 0;
   out_4815907768218277041[30] = 0;
   out_4815907768218277041[31] = 0;
   out_4815907768218277041[32] = 0;
   out_4815907768218277041[33] = 0;
   out_4815907768218277041[34] = 0;
   out_4815907768218277041[35] = 0;
   out_4815907768218277041[36] = 0;
   out_4815907768218277041[37] = 0;
   out_4815907768218277041[38] = 0;
   out_4815907768218277041[39] = 0;
   out_4815907768218277041[40] = 0;
   out_4815907768218277041[41] = 0;
   out_4815907768218277041[42] = 0;
   out_4815907768218277041[43] = 0;
   out_4815907768218277041[44] = 1;
   out_4815907768218277041[45] = 0;
   out_4815907768218277041[46] = 0;
   out_4815907768218277041[47] = 0;
   out_4815907768218277041[48] = 0;
   out_4815907768218277041[49] = 0;
   out_4815907768218277041[50] = dt;
   out_4815907768218277041[51] = 0;
   out_4815907768218277041[52] = 0;
   out_4815907768218277041[53] = 0;
   out_4815907768218277041[54] = 0;
   out_4815907768218277041[55] = 0;
   out_4815907768218277041[56] = 0;
   out_4815907768218277041[57] = 0;
   out_4815907768218277041[58] = 0;
   out_4815907768218277041[59] = 0;
   out_4815907768218277041[60] = 0;
   out_4815907768218277041[61] = 0;
   out_4815907768218277041[62] = 0;
   out_4815907768218277041[63] = 0;
   out_4815907768218277041[64] = 0;
   out_4815907768218277041[65] = 0;
   out_4815907768218277041[66] = 1;
   out_4815907768218277041[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4815907768218277041[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4815907768218277041[69] = 0;
   out_4815907768218277041[70] = 0;
   out_4815907768218277041[71] = 0;
   out_4815907768218277041[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4815907768218277041[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4815907768218277041[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4815907768218277041[75] = 0;
   out_4815907768218277041[76] = 0;
   out_4815907768218277041[77] = 0;
   out_4815907768218277041[78] = 0;
   out_4815907768218277041[79] = 0;
   out_4815907768218277041[80] = 0;
   out_4815907768218277041[81] = 0;
   out_4815907768218277041[82] = 0;
   out_4815907768218277041[83] = 0;
   out_4815907768218277041[84] = 0;
   out_4815907768218277041[85] = 0;
   out_4815907768218277041[86] = 0;
   out_4815907768218277041[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4815907768218277041[88] = 1;
   out_4815907768218277041[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4815907768218277041[90] = 0;
   out_4815907768218277041[91] = 0;
   out_4815907768218277041[92] = 0;
   out_4815907768218277041[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4815907768218277041[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4815907768218277041[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4815907768218277041[96] = 0;
   out_4815907768218277041[97] = 0;
   out_4815907768218277041[98] = 0;
   out_4815907768218277041[99] = 0;
   out_4815907768218277041[100] = 0;
   out_4815907768218277041[101] = 0;
   out_4815907768218277041[102] = 0;
   out_4815907768218277041[103] = 0;
   out_4815907768218277041[104] = 0;
   out_4815907768218277041[105] = 0;
   out_4815907768218277041[106] = 0;
   out_4815907768218277041[107] = 0;
   out_4815907768218277041[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4815907768218277041[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4815907768218277041[110] = 1;
   out_4815907768218277041[111] = 0;
   out_4815907768218277041[112] = 0;
   out_4815907768218277041[113] = 0;
   out_4815907768218277041[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4815907768218277041[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4815907768218277041[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4815907768218277041[117] = 0;
   out_4815907768218277041[118] = 0;
   out_4815907768218277041[119] = 0;
   out_4815907768218277041[120] = 0;
   out_4815907768218277041[121] = 0;
   out_4815907768218277041[122] = 0;
   out_4815907768218277041[123] = 0;
   out_4815907768218277041[124] = 0;
   out_4815907768218277041[125] = 0;
   out_4815907768218277041[126] = 0;
   out_4815907768218277041[127] = 0;
   out_4815907768218277041[128] = 0;
   out_4815907768218277041[129] = 0;
   out_4815907768218277041[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4815907768218277041[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4815907768218277041[132] = 1;
   out_4815907768218277041[133] = 0;
   out_4815907768218277041[134] = 0;
   out_4815907768218277041[135] = 0;
   out_4815907768218277041[136] = 0;
   out_4815907768218277041[137] = 0;
   out_4815907768218277041[138] = 0;
   out_4815907768218277041[139] = 0;
   out_4815907768218277041[140] = 0;
   out_4815907768218277041[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4815907768218277041[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4815907768218277041[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4815907768218277041[144] = 0;
   out_4815907768218277041[145] = 0;
   out_4815907768218277041[146] = 0;
   out_4815907768218277041[147] = 0;
   out_4815907768218277041[148] = 0;
   out_4815907768218277041[149] = 0;
   out_4815907768218277041[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4815907768218277041[151] = 0;
   out_4815907768218277041[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4815907768218277041[153] = 0;
   out_4815907768218277041[154] = 1;
   out_4815907768218277041[155] = 0;
   out_4815907768218277041[156] = 0;
   out_4815907768218277041[157] = 0;
   out_4815907768218277041[158] = 0;
   out_4815907768218277041[159] = 0;
   out_4815907768218277041[160] = 0;
   out_4815907768218277041[161] = 0;
   out_4815907768218277041[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4815907768218277041[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4815907768218277041[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4815907768218277041[165] = 0;
   out_4815907768218277041[166] = 0;
   out_4815907768218277041[167] = 0;
   out_4815907768218277041[168] = 0;
   out_4815907768218277041[169] = 0;
   out_4815907768218277041[170] = 0;
   out_4815907768218277041[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4815907768218277041[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4815907768218277041[173] = 0;
   out_4815907768218277041[174] = 0;
   out_4815907768218277041[175] = 0;
   out_4815907768218277041[176] = 1;
   out_4815907768218277041[177] = 0;
   out_4815907768218277041[178] = 0;
   out_4815907768218277041[179] = 0;
   out_4815907768218277041[180] = 0;
   out_4815907768218277041[181] = 0;
   out_4815907768218277041[182] = 0;
   out_4815907768218277041[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4815907768218277041[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4815907768218277041[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4815907768218277041[186] = 0;
   out_4815907768218277041[187] = 0;
   out_4815907768218277041[188] = 0;
   out_4815907768218277041[189] = 0;
   out_4815907768218277041[190] = 0;
   out_4815907768218277041[191] = 0;
   out_4815907768218277041[192] = 0;
   out_4815907768218277041[193] = 0;
   out_4815907768218277041[194] = 0;
   out_4815907768218277041[195] = 0;
   out_4815907768218277041[196] = 0;
   out_4815907768218277041[197] = 0;
   out_4815907768218277041[198] = 1;
   out_4815907768218277041[199] = 0;
   out_4815907768218277041[200] = 0;
   out_4815907768218277041[201] = 0;
   out_4815907768218277041[202] = 0;
   out_4815907768218277041[203] = 0;
   out_4815907768218277041[204] = 0;
   out_4815907768218277041[205] = 0;
   out_4815907768218277041[206] = 0;
   out_4815907768218277041[207] = 0;
   out_4815907768218277041[208] = 0;
   out_4815907768218277041[209] = 0;
   out_4815907768218277041[210] = 0;
   out_4815907768218277041[211] = 0;
   out_4815907768218277041[212] = 0;
   out_4815907768218277041[213] = 0;
   out_4815907768218277041[214] = 0;
   out_4815907768218277041[215] = 0;
   out_4815907768218277041[216] = 0;
   out_4815907768218277041[217] = 0;
   out_4815907768218277041[218] = 0;
   out_4815907768218277041[219] = 0;
   out_4815907768218277041[220] = 1;
   out_4815907768218277041[221] = 0;
   out_4815907768218277041[222] = 0;
   out_4815907768218277041[223] = 0;
   out_4815907768218277041[224] = 0;
   out_4815907768218277041[225] = 0;
   out_4815907768218277041[226] = 0;
   out_4815907768218277041[227] = 0;
   out_4815907768218277041[228] = 0;
   out_4815907768218277041[229] = 0;
   out_4815907768218277041[230] = 0;
   out_4815907768218277041[231] = 0;
   out_4815907768218277041[232] = 0;
   out_4815907768218277041[233] = 0;
   out_4815907768218277041[234] = 0;
   out_4815907768218277041[235] = 0;
   out_4815907768218277041[236] = 0;
   out_4815907768218277041[237] = 0;
   out_4815907768218277041[238] = 0;
   out_4815907768218277041[239] = 0;
   out_4815907768218277041[240] = 0;
   out_4815907768218277041[241] = 0;
   out_4815907768218277041[242] = 1;
   out_4815907768218277041[243] = 0;
   out_4815907768218277041[244] = 0;
   out_4815907768218277041[245] = 0;
   out_4815907768218277041[246] = 0;
   out_4815907768218277041[247] = 0;
   out_4815907768218277041[248] = 0;
   out_4815907768218277041[249] = 0;
   out_4815907768218277041[250] = 0;
   out_4815907768218277041[251] = 0;
   out_4815907768218277041[252] = 0;
   out_4815907768218277041[253] = 0;
   out_4815907768218277041[254] = 0;
   out_4815907768218277041[255] = 0;
   out_4815907768218277041[256] = 0;
   out_4815907768218277041[257] = 0;
   out_4815907768218277041[258] = 0;
   out_4815907768218277041[259] = 0;
   out_4815907768218277041[260] = 0;
   out_4815907768218277041[261] = 0;
   out_4815907768218277041[262] = 0;
   out_4815907768218277041[263] = 0;
   out_4815907768218277041[264] = 1;
   out_4815907768218277041[265] = 0;
   out_4815907768218277041[266] = 0;
   out_4815907768218277041[267] = 0;
   out_4815907768218277041[268] = 0;
   out_4815907768218277041[269] = 0;
   out_4815907768218277041[270] = 0;
   out_4815907768218277041[271] = 0;
   out_4815907768218277041[272] = 0;
   out_4815907768218277041[273] = 0;
   out_4815907768218277041[274] = 0;
   out_4815907768218277041[275] = 0;
   out_4815907768218277041[276] = 0;
   out_4815907768218277041[277] = 0;
   out_4815907768218277041[278] = 0;
   out_4815907768218277041[279] = 0;
   out_4815907768218277041[280] = 0;
   out_4815907768218277041[281] = 0;
   out_4815907768218277041[282] = 0;
   out_4815907768218277041[283] = 0;
   out_4815907768218277041[284] = 0;
   out_4815907768218277041[285] = 0;
   out_4815907768218277041[286] = 1;
   out_4815907768218277041[287] = 0;
   out_4815907768218277041[288] = 0;
   out_4815907768218277041[289] = 0;
   out_4815907768218277041[290] = 0;
   out_4815907768218277041[291] = 0;
   out_4815907768218277041[292] = 0;
   out_4815907768218277041[293] = 0;
   out_4815907768218277041[294] = 0;
   out_4815907768218277041[295] = 0;
   out_4815907768218277041[296] = 0;
   out_4815907768218277041[297] = 0;
   out_4815907768218277041[298] = 0;
   out_4815907768218277041[299] = 0;
   out_4815907768218277041[300] = 0;
   out_4815907768218277041[301] = 0;
   out_4815907768218277041[302] = 0;
   out_4815907768218277041[303] = 0;
   out_4815907768218277041[304] = 0;
   out_4815907768218277041[305] = 0;
   out_4815907768218277041[306] = 0;
   out_4815907768218277041[307] = 0;
   out_4815907768218277041[308] = 1;
   out_4815907768218277041[309] = 0;
   out_4815907768218277041[310] = 0;
   out_4815907768218277041[311] = 0;
   out_4815907768218277041[312] = 0;
   out_4815907768218277041[313] = 0;
   out_4815907768218277041[314] = 0;
   out_4815907768218277041[315] = 0;
   out_4815907768218277041[316] = 0;
   out_4815907768218277041[317] = 0;
   out_4815907768218277041[318] = 0;
   out_4815907768218277041[319] = 0;
   out_4815907768218277041[320] = 0;
   out_4815907768218277041[321] = 0;
   out_4815907768218277041[322] = 0;
   out_4815907768218277041[323] = 0;
   out_4815907768218277041[324] = 0;
   out_4815907768218277041[325] = 0;
   out_4815907768218277041[326] = 0;
   out_4815907768218277041[327] = 0;
   out_4815907768218277041[328] = 0;
   out_4815907768218277041[329] = 0;
   out_4815907768218277041[330] = 1;
   out_4815907768218277041[331] = 0;
   out_4815907768218277041[332] = 0;
   out_4815907768218277041[333] = 0;
   out_4815907768218277041[334] = 0;
   out_4815907768218277041[335] = 0;
   out_4815907768218277041[336] = 0;
   out_4815907768218277041[337] = 0;
   out_4815907768218277041[338] = 0;
   out_4815907768218277041[339] = 0;
   out_4815907768218277041[340] = 0;
   out_4815907768218277041[341] = 0;
   out_4815907768218277041[342] = 0;
   out_4815907768218277041[343] = 0;
   out_4815907768218277041[344] = 0;
   out_4815907768218277041[345] = 0;
   out_4815907768218277041[346] = 0;
   out_4815907768218277041[347] = 0;
   out_4815907768218277041[348] = 0;
   out_4815907768218277041[349] = 0;
   out_4815907768218277041[350] = 0;
   out_4815907768218277041[351] = 0;
   out_4815907768218277041[352] = 1;
   out_4815907768218277041[353] = 0;
   out_4815907768218277041[354] = 0;
   out_4815907768218277041[355] = 0;
   out_4815907768218277041[356] = 0;
   out_4815907768218277041[357] = 0;
   out_4815907768218277041[358] = 0;
   out_4815907768218277041[359] = 0;
   out_4815907768218277041[360] = 0;
   out_4815907768218277041[361] = 0;
   out_4815907768218277041[362] = 0;
   out_4815907768218277041[363] = 0;
   out_4815907768218277041[364] = 0;
   out_4815907768218277041[365] = 0;
   out_4815907768218277041[366] = 0;
   out_4815907768218277041[367] = 0;
   out_4815907768218277041[368] = 0;
   out_4815907768218277041[369] = 0;
   out_4815907768218277041[370] = 0;
   out_4815907768218277041[371] = 0;
   out_4815907768218277041[372] = 0;
   out_4815907768218277041[373] = 0;
   out_4815907768218277041[374] = 1;
   out_4815907768218277041[375] = 0;
   out_4815907768218277041[376] = 0;
   out_4815907768218277041[377] = 0;
   out_4815907768218277041[378] = 0;
   out_4815907768218277041[379] = 0;
   out_4815907768218277041[380] = 0;
   out_4815907768218277041[381] = 0;
   out_4815907768218277041[382] = 0;
   out_4815907768218277041[383] = 0;
   out_4815907768218277041[384] = 0;
   out_4815907768218277041[385] = 0;
   out_4815907768218277041[386] = 0;
   out_4815907768218277041[387] = 0;
   out_4815907768218277041[388] = 0;
   out_4815907768218277041[389] = 0;
   out_4815907768218277041[390] = 0;
   out_4815907768218277041[391] = 0;
   out_4815907768218277041[392] = 0;
   out_4815907768218277041[393] = 0;
   out_4815907768218277041[394] = 0;
   out_4815907768218277041[395] = 0;
   out_4815907768218277041[396] = 1;
   out_4815907768218277041[397] = 0;
   out_4815907768218277041[398] = 0;
   out_4815907768218277041[399] = 0;
   out_4815907768218277041[400] = 0;
   out_4815907768218277041[401] = 0;
   out_4815907768218277041[402] = 0;
   out_4815907768218277041[403] = 0;
   out_4815907768218277041[404] = 0;
   out_4815907768218277041[405] = 0;
   out_4815907768218277041[406] = 0;
   out_4815907768218277041[407] = 0;
   out_4815907768218277041[408] = 0;
   out_4815907768218277041[409] = 0;
   out_4815907768218277041[410] = 0;
   out_4815907768218277041[411] = 0;
   out_4815907768218277041[412] = 0;
   out_4815907768218277041[413] = 0;
   out_4815907768218277041[414] = 0;
   out_4815907768218277041[415] = 0;
   out_4815907768218277041[416] = 0;
   out_4815907768218277041[417] = 0;
   out_4815907768218277041[418] = 1;
   out_4815907768218277041[419] = 0;
   out_4815907768218277041[420] = 0;
   out_4815907768218277041[421] = 0;
   out_4815907768218277041[422] = 0;
   out_4815907768218277041[423] = 0;
   out_4815907768218277041[424] = 0;
   out_4815907768218277041[425] = 0;
   out_4815907768218277041[426] = 0;
   out_4815907768218277041[427] = 0;
   out_4815907768218277041[428] = 0;
   out_4815907768218277041[429] = 0;
   out_4815907768218277041[430] = 0;
   out_4815907768218277041[431] = 0;
   out_4815907768218277041[432] = 0;
   out_4815907768218277041[433] = 0;
   out_4815907768218277041[434] = 0;
   out_4815907768218277041[435] = 0;
   out_4815907768218277041[436] = 0;
   out_4815907768218277041[437] = 0;
   out_4815907768218277041[438] = 0;
   out_4815907768218277041[439] = 0;
   out_4815907768218277041[440] = 1;
}
void h_4(double *state, double *unused, double *out_7961739201317865100) {
   out_7961739201317865100[0] = state[10] + state[13];
   out_7961739201317865100[1] = state[11] + state[14];
   out_7961739201317865100[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4351790703970074386) {
   out_4351790703970074386[0] = 0;
   out_4351790703970074386[1] = 0;
   out_4351790703970074386[2] = 0;
   out_4351790703970074386[3] = 0;
   out_4351790703970074386[4] = 0;
   out_4351790703970074386[5] = 0;
   out_4351790703970074386[6] = 0;
   out_4351790703970074386[7] = 0;
   out_4351790703970074386[8] = 0;
   out_4351790703970074386[9] = 0;
   out_4351790703970074386[10] = 1;
   out_4351790703970074386[11] = 0;
   out_4351790703970074386[12] = 0;
   out_4351790703970074386[13] = 1;
   out_4351790703970074386[14] = 0;
   out_4351790703970074386[15] = 0;
   out_4351790703970074386[16] = 0;
   out_4351790703970074386[17] = 0;
   out_4351790703970074386[18] = 0;
   out_4351790703970074386[19] = 0;
   out_4351790703970074386[20] = 0;
   out_4351790703970074386[21] = 0;
   out_4351790703970074386[22] = 0;
   out_4351790703970074386[23] = 0;
   out_4351790703970074386[24] = 0;
   out_4351790703970074386[25] = 0;
   out_4351790703970074386[26] = 0;
   out_4351790703970074386[27] = 0;
   out_4351790703970074386[28] = 0;
   out_4351790703970074386[29] = 0;
   out_4351790703970074386[30] = 0;
   out_4351790703970074386[31] = 0;
   out_4351790703970074386[32] = 0;
   out_4351790703970074386[33] = 1;
   out_4351790703970074386[34] = 0;
   out_4351790703970074386[35] = 0;
   out_4351790703970074386[36] = 1;
   out_4351790703970074386[37] = 0;
   out_4351790703970074386[38] = 0;
   out_4351790703970074386[39] = 0;
   out_4351790703970074386[40] = 0;
   out_4351790703970074386[41] = 0;
   out_4351790703970074386[42] = 0;
   out_4351790703970074386[43] = 0;
   out_4351790703970074386[44] = 0;
   out_4351790703970074386[45] = 0;
   out_4351790703970074386[46] = 0;
   out_4351790703970074386[47] = 0;
   out_4351790703970074386[48] = 0;
   out_4351790703970074386[49] = 0;
   out_4351790703970074386[50] = 0;
   out_4351790703970074386[51] = 0;
   out_4351790703970074386[52] = 0;
   out_4351790703970074386[53] = 0;
   out_4351790703970074386[54] = 0;
   out_4351790703970074386[55] = 0;
   out_4351790703970074386[56] = 1;
   out_4351790703970074386[57] = 0;
   out_4351790703970074386[58] = 0;
   out_4351790703970074386[59] = 1;
   out_4351790703970074386[60] = 0;
   out_4351790703970074386[61] = 0;
   out_4351790703970074386[62] = 0;
   out_4351790703970074386[63] = 0;
   out_4351790703970074386[64] = 0;
   out_4351790703970074386[65] = 0;
}
void h_9(double *state, double *unused, double *out_6666237163126750011) {
   out_6666237163126750011[0] = state[10];
   out_6666237163126750011[1] = state[11];
   out_6666237163126750011[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4592980350599665031) {
   out_4592980350599665031[0] = 0;
   out_4592980350599665031[1] = 0;
   out_4592980350599665031[2] = 0;
   out_4592980350599665031[3] = 0;
   out_4592980350599665031[4] = 0;
   out_4592980350599665031[5] = 0;
   out_4592980350599665031[6] = 0;
   out_4592980350599665031[7] = 0;
   out_4592980350599665031[8] = 0;
   out_4592980350599665031[9] = 0;
   out_4592980350599665031[10] = 1;
   out_4592980350599665031[11] = 0;
   out_4592980350599665031[12] = 0;
   out_4592980350599665031[13] = 0;
   out_4592980350599665031[14] = 0;
   out_4592980350599665031[15] = 0;
   out_4592980350599665031[16] = 0;
   out_4592980350599665031[17] = 0;
   out_4592980350599665031[18] = 0;
   out_4592980350599665031[19] = 0;
   out_4592980350599665031[20] = 0;
   out_4592980350599665031[21] = 0;
   out_4592980350599665031[22] = 0;
   out_4592980350599665031[23] = 0;
   out_4592980350599665031[24] = 0;
   out_4592980350599665031[25] = 0;
   out_4592980350599665031[26] = 0;
   out_4592980350599665031[27] = 0;
   out_4592980350599665031[28] = 0;
   out_4592980350599665031[29] = 0;
   out_4592980350599665031[30] = 0;
   out_4592980350599665031[31] = 0;
   out_4592980350599665031[32] = 0;
   out_4592980350599665031[33] = 1;
   out_4592980350599665031[34] = 0;
   out_4592980350599665031[35] = 0;
   out_4592980350599665031[36] = 0;
   out_4592980350599665031[37] = 0;
   out_4592980350599665031[38] = 0;
   out_4592980350599665031[39] = 0;
   out_4592980350599665031[40] = 0;
   out_4592980350599665031[41] = 0;
   out_4592980350599665031[42] = 0;
   out_4592980350599665031[43] = 0;
   out_4592980350599665031[44] = 0;
   out_4592980350599665031[45] = 0;
   out_4592980350599665031[46] = 0;
   out_4592980350599665031[47] = 0;
   out_4592980350599665031[48] = 0;
   out_4592980350599665031[49] = 0;
   out_4592980350599665031[50] = 0;
   out_4592980350599665031[51] = 0;
   out_4592980350599665031[52] = 0;
   out_4592980350599665031[53] = 0;
   out_4592980350599665031[54] = 0;
   out_4592980350599665031[55] = 0;
   out_4592980350599665031[56] = 1;
   out_4592980350599665031[57] = 0;
   out_4592980350599665031[58] = 0;
   out_4592980350599665031[59] = 0;
   out_4592980350599665031[60] = 0;
   out_4592980350599665031[61] = 0;
   out_4592980350599665031[62] = 0;
   out_4592980350599665031[63] = 0;
   out_4592980350599665031[64] = 0;
   out_4592980350599665031[65] = 0;
}
void h_10(double *state, double *unused, double *out_3295456728395727948) {
   out_3295456728395727948[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3295456728395727948[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3295456728395727948[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2761766956048973774) {
   out_2761766956048973774[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2761766956048973774[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2761766956048973774[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2761766956048973774[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2761766956048973774[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2761766956048973774[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2761766956048973774[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2761766956048973774[7] = 0;
   out_2761766956048973774[8] = 0;
   out_2761766956048973774[9] = 0;
   out_2761766956048973774[10] = 0;
   out_2761766956048973774[11] = 0;
   out_2761766956048973774[12] = 0;
   out_2761766956048973774[13] = 0;
   out_2761766956048973774[14] = 0;
   out_2761766956048973774[15] = 0;
   out_2761766956048973774[16] = 1;
   out_2761766956048973774[17] = 0;
   out_2761766956048973774[18] = 0;
   out_2761766956048973774[19] = 1;
   out_2761766956048973774[20] = 0;
   out_2761766956048973774[21] = 0;
   out_2761766956048973774[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2761766956048973774[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2761766956048973774[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2761766956048973774[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2761766956048973774[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2761766956048973774[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2761766956048973774[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2761766956048973774[29] = 0;
   out_2761766956048973774[30] = 0;
   out_2761766956048973774[31] = 0;
   out_2761766956048973774[32] = 0;
   out_2761766956048973774[33] = 0;
   out_2761766956048973774[34] = 0;
   out_2761766956048973774[35] = 0;
   out_2761766956048973774[36] = 0;
   out_2761766956048973774[37] = 0;
   out_2761766956048973774[38] = 0;
   out_2761766956048973774[39] = 1;
   out_2761766956048973774[40] = 0;
   out_2761766956048973774[41] = 0;
   out_2761766956048973774[42] = 1;
   out_2761766956048973774[43] = 0;
   out_2761766956048973774[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2761766956048973774[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2761766956048973774[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2761766956048973774[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2761766956048973774[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2761766956048973774[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2761766956048973774[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2761766956048973774[51] = 0;
   out_2761766956048973774[52] = 0;
   out_2761766956048973774[53] = 0;
   out_2761766956048973774[54] = 0;
   out_2761766956048973774[55] = 0;
   out_2761766956048973774[56] = 0;
   out_2761766956048973774[57] = 0;
   out_2761766956048973774[58] = 0;
   out_2761766956048973774[59] = 0;
   out_2761766956048973774[60] = 0;
   out_2761766956048973774[61] = 0;
   out_2761766956048973774[62] = 1;
   out_2761766956048973774[63] = 0;
   out_2761766956048973774[64] = 0;
   out_2761766956048973774[65] = 1;
}
void h_12(double *state, double *unused, double *out_6229943248680522981) {
   out_6229943248680522981[0] = state[0];
   out_6229943248680522981[1] = state[1];
   out_6229943248680522981[2] = state[2];
}
void H_12(double *state, double *unused, double *out_9075496961707515435) {
   out_9075496961707515435[0] = 1;
   out_9075496961707515435[1] = 0;
   out_9075496961707515435[2] = 0;
   out_9075496961707515435[3] = 0;
   out_9075496961707515435[4] = 0;
   out_9075496961707515435[5] = 0;
   out_9075496961707515435[6] = 0;
   out_9075496961707515435[7] = 0;
   out_9075496961707515435[8] = 0;
   out_9075496961707515435[9] = 0;
   out_9075496961707515435[10] = 0;
   out_9075496961707515435[11] = 0;
   out_9075496961707515435[12] = 0;
   out_9075496961707515435[13] = 0;
   out_9075496961707515435[14] = 0;
   out_9075496961707515435[15] = 0;
   out_9075496961707515435[16] = 0;
   out_9075496961707515435[17] = 0;
   out_9075496961707515435[18] = 0;
   out_9075496961707515435[19] = 0;
   out_9075496961707515435[20] = 0;
   out_9075496961707515435[21] = 0;
   out_9075496961707515435[22] = 0;
   out_9075496961707515435[23] = 1;
   out_9075496961707515435[24] = 0;
   out_9075496961707515435[25] = 0;
   out_9075496961707515435[26] = 0;
   out_9075496961707515435[27] = 0;
   out_9075496961707515435[28] = 0;
   out_9075496961707515435[29] = 0;
   out_9075496961707515435[30] = 0;
   out_9075496961707515435[31] = 0;
   out_9075496961707515435[32] = 0;
   out_9075496961707515435[33] = 0;
   out_9075496961707515435[34] = 0;
   out_9075496961707515435[35] = 0;
   out_9075496961707515435[36] = 0;
   out_9075496961707515435[37] = 0;
   out_9075496961707515435[38] = 0;
   out_9075496961707515435[39] = 0;
   out_9075496961707515435[40] = 0;
   out_9075496961707515435[41] = 0;
   out_9075496961707515435[42] = 0;
   out_9075496961707515435[43] = 0;
   out_9075496961707515435[44] = 0;
   out_9075496961707515435[45] = 0;
   out_9075496961707515435[46] = 1;
   out_9075496961707515435[47] = 0;
   out_9075496961707515435[48] = 0;
   out_9075496961707515435[49] = 0;
   out_9075496961707515435[50] = 0;
   out_9075496961707515435[51] = 0;
   out_9075496961707515435[52] = 0;
   out_9075496961707515435[53] = 0;
   out_9075496961707515435[54] = 0;
   out_9075496961707515435[55] = 0;
   out_9075496961707515435[56] = 0;
   out_9075496961707515435[57] = 0;
   out_9075496961707515435[58] = 0;
   out_9075496961707515435[59] = 0;
   out_9075496961707515435[60] = 0;
   out_9075496961707515435[61] = 0;
   out_9075496961707515435[62] = 0;
   out_9075496961707515435[63] = 0;
   out_9075496961707515435[64] = 0;
   out_9075496961707515435[65] = 0;
}
void h_35(double *state, double *unused, double *out_4958689945564525375) {
   out_4958689945564525375[0] = state[7];
   out_4958689945564525375[1] = state[8];
   out_4958689945564525375[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6329933929382501726) {
   out_6329933929382501726[0] = 0;
   out_6329933929382501726[1] = 0;
   out_6329933929382501726[2] = 0;
   out_6329933929382501726[3] = 0;
   out_6329933929382501726[4] = 0;
   out_6329933929382501726[5] = 0;
   out_6329933929382501726[6] = 0;
   out_6329933929382501726[7] = 1;
   out_6329933929382501726[8] = 0;
   out_6329933929382501726[9] = 0;
   out_6329933929382501726[10] = 0;
   out_6329933929382501726[11] = 0;
   out_6329933929382501726[12] = 0;
   out_6329933929382501726[13] = 0;
   out_6329933929382501726[14] = 0;
   out_6329933929382501726[15] = 0;
   out_6329933929382501726[16] = 0;
   out_6329933929382501726[17] = 0;
   out_6329933929382501726[18] = 0;
   out_6329933929382501726[19] = 0;
   out_6329933929382501726[20] = 0;
   out_6329933929382501726[21] = 0;
   out_6329933929382501726[22] = 0;
   out_6329933929382501726[23] = 0;
   out_6329933929382501726[24] = 0;
   out_6329933929382501726[25] = 0;
   out_6329933929382501726[26] = 0;
   out_6329933929382501726[27] = 0;
   out_6329933929382501726[28] = 0;
   out_6329933929382501726[29] = 0;
   out_6329933929382501726[30] = 1;
   out_6329933929382501726[31] = 0;
   out_6329933929382501726[32] = 0;
   out_6329933929382501726[33] = 0;
   out_6329933929382501726[34] = 0;
   out_6329933929382501726[35] = 0;
   out_6329933929382501726[36] = 0;
   out_6329933929382501726[37] = 0;
   out_6329933929382501726[38] = 0;
   out_6329933929382501726[39] = 0;
   out_6329933929382501726[40] = 0;
   out_6329933929382501726[41] = 0;
   out_6329933929382501726[42] = 0;
   out_6329933929382501726[43] = 0;
   out_6329933929382501726[44] = 0;
   out_6329933929382501726[45] = 0;
   out_6329933929382501726[46] = 0;
   out_6329933929382501726[47] = 0;
   out_6329933929382501726[48] = 0;
   out_6329933929382501726[49] = 0;
   out_6329933929382501726[50] = 0;
   out_6329933929382501726[51] = 0;
   out_6329933929382501726[52] = 0;
   out_6329933929382501726[53] = 1;
   out_6329933929382501726[54] = 0;
   out_6329933929382501726[55] = 0;
   out_6329933929382501726[56] = 0;
   out_6329933929382501726[57] = 0;
   out_6329933929382501726[58] = 0;
   out_6329933929382501726[59] = 0;
   out_6329933929382501726[60] = 0;
   out_6329933929382501726[61] = 0;
   out_6329933929382501726[62] = 0;
   out_6329933929382501726[63] = 0;
   out_6329933929382501726[64] = 0;
   out_6329933929382501726[65] = 0;
}
void h_32(double *state, double *unused, double *out_410212729802688028) {
   out_410212729802688028[0] = state[3];
   out_410212729802688028[1] = state[4];
   out_410212729802688028[2] = state[5];
   out_410212729802688028[3] = state[6];
}
void H_32(double *state, double *unused, double *out_972416037003074665) {
   out_972416037003074665[0] = 0;
   out_972416037003074665[1] = 0;
   out_972416037003074665[2] = 0;
   out_972416037003074665[3] = 1;
   out_972416037003074665[4] = 0;
   out_972416037003074665[5] = 0;
   out_972416037003074665[6] = 0;
   out_972416037003074665[7] = 0;
   out_972416037003074665[8] = 0;
   out_972416037003074665[9] = 0;
   out_972416037003074665[10] = 0;
   out_972416037003074665[11] = 0;
   out_972416037003074665[12] = 0;
   out_972416037003074665[13] = 0;
   out_972416037003074665[14] = 0;
   out_972416037003074665[15] = 0;
   out_972416037003074665[16] = 0;
   out_972416037003074665[17] = 0;
   out_972416037003074665[18] = 0;
   out_972416037003074665[19] = 0;
   out_972416037003074665[20] = 0;
   out_972416037003074665[21] = 0;
   out_972416037003074665[22] = 0;
   out_972416037003074665[23] = 0;
   out_972416037003074665[24] = 0;
   out_972416037003074665[25] = 0;
   out_972416037003074665[26] = 1;
   out_972416037003074665[27] = 0;
   out_972416037003074665[28] = 0;
   out_972416037003074665[29] = 0;
   out_972416037003074665[30] = 0;
   out_972416037003074665[31] = 0;
   out_972416037003074665[32] = 0;
   out_972416037003074665[33] = 0;
   out_972416037003074665[34] = 0;
   out_972416037003074665[35] = 0;
   out_972416037003074665[36] = 0;
   out_972416037003074665[37] = 0;
   out_972416037003074665[38] = 0;
   out_972416037003074665[39] = 0;
   out_972416037003074665[40] = 0;
   out_972416037003074665[41] = 0;
   out_972416037003074665[42] = 0;
   out_972416037003074665[43] = 0;
   out_972416037003074665[44] = 0;
   out_972416037003074665[45] = 0;
   out_972416037003074665[46] = 0;
   out_972416037003074665[47] = 0;
   out_972416037003074665[48] = 0;
   out_972416037003074665[49] = 1;
   out_972416037003074665[50] = 0;
   out_972416037003074665[51] = 0;
   out_972416037003074665[52] = 0;
   out_972416037003074665[53] = 0;
   out_972416037003074665[54] = 0;
   out_972416037003074665[55] = 0;
   out_972416037003074665[56] = 0;
   out_972416037003074665[57] = 0;
   out_972416037003074665[58] = 0;
   out_972416037003074665[59] = 0;
   out_972416037003074665[60] = 0;
   out_972416037003074665[61] = 0;
   out_972416037003074665[62] = 0;
   out_972416037003074665[63] = 0;
   out_972416037003074665[64] = 0;
   out_972416037003074665[65] = 0;
   out_972416037003074665[66] = 0;
   out_972416037003074665[67] = 0;
   out_972416037003074665[68] = 0;
   out_972416037003074665[69] = 0;
   out_972416037003074665[70] = 0;
   out_972416037003074665[71] = 0;
   out_972416037003074665[72] = 1;
   out_972416037003074665[73] = 0;
   out_972416037003074665[74] = 0;
   out_972416037003074665[75] = 0;
   out_972416037003074665[76] = 0;
   out_972416037003074665[77] = 0;
   out_972416037003074665[78] = 0;
   out_972416037003074665[79] = 0;
   out_972416037003074665[80] = 0;
   out_972416037003074665[81] = 0;
   out_972416037003074665[82] = 0;
   out_972416037003074665[83] = 0;
   out_972416037003074665[84] = 0;
   out_972416037003074665[85] = 0;
   out_972416037003074665[86] = 0;
   out_972416037003074665[87] = 0;
}
void h_13(double *state, double *unused, double *out_4031627545452802049) {
   out_4031627545452802049[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4031627545452802049[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4031627545452802049[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1643735551917084066) {
   out_1643735551917084066[0] = 0;
   out_1643735551917084066[1] = 0;
   out_1643735551917084066[2] = 0;
   out_1643735551917084066[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1643735551917084066[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1643735551917084066[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1643735551917084066[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1643735551917084066[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1643735551917084066[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1643735551917084066[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1643735551917084066[10] = 0;
   out_1643735551917084066[11] = 0;
   out_1643735551917084066[12] = 0;
   out_1643735551917084066[13] = 0;
   out_1643735551917084066[14] = 0;
   out_1643735551917084066[15] = 0;
   out_1643735551917084066[16] = 0;
   out_1643735551917084066[17] = 0;
   out_1643735551917084066[18] = 0;
   out_1643735551917084066[19] = 0;
   out_1643735551917084066[20] = 0;
   out_1643735551917084066[21] = 0;
   out_1643735551917084066[22] = 0;
   out_1643735551917084066[23] = 0;
   out_1643735551917084066[24] = 0;
   out_1643735551917084066[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1643735551917084066[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1643735551917084066[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1643735551917084066[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1643735551917084066[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1643735551917084066[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1643735551917084066[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1643735551917084066[32] = 0;
   out_1643735551917084066[33] = 0;
   out_1643735551917084066[34] = 0;
   out_1643735551917084066[35] = 0;
   out_1643735551917084066[36] = 0;
   out_1643735551917084066[37] = 0;
   out_1643735551917084066[38] = 0;
   out_1643735551917084066[39] = 0;
   out_1643735551917084066[40] = 0;
   out_1643735551917084066[41] = 0;
   out_1643735551917084066[42] = 0;
   out_1643735551917084066[43] = 0;
   out_1643735551917084066[44] = 0;
   out_1643735551917084066[45] = 0;
   out_1643735551917084066[46] = 0;
   out_1643735551917084066[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1643735551917084066[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1643735551917084066[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1643735551917084066[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1643735551917084066[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1643735551917084066[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1643735551917084066[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1643735551917084066[54] = 0;
   out_1643735551917084066[55] = 0;
   out_1643735551917084066[56] = 0;
   out_1643735551917084066[57] = 0;
   out_1643735551917084066[58] = 0;
   out_1643735551917084066[59] = 0;
   out_1643735551917084066[60] = 0;
   out_1643735551917084066[61] = 0;
   out_1643735551917084066[62] = 0;
   out_1643735551917084066[63] = 0;
   out_1643735551917084066[64] = 0;
   out_1643735551917084066[65] = 0;
}
void h_14(double *state, double *unused, double *out_6666237163126750011) {
   out_6666237163126750011[0] = state[10];
   out_6666237163126750011[1] = state[11];
   out_6666237163126750011[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4592980350599665031) {
   out_4592980350599665031[0] = 0;
   out_4592980350599665031[1] = 0;
   out_4592980350599665031[2] = 0;
   out_4592980350599665031[3] = 0;
   out_4592980350599665031[4] = 0;
   out_4592980350599665031[5] = 0;
   out_4592980350599665031[6] = 0;
   out_4592980350599665031[7] = 0;
   out_4592980350599665031[8] = 0;
   out_4592980350599665031[9] = 0;
   out_4592980350599665031[10] = 1;
   out_4592980350599665031[11] = 0;
   out_4592980350599665031[12] = 0;
   out_4592980350599665031[13] = 0;
   out_4592980350599665031[14] = 0;
   out_4592980350599665031[15] = 0;
   out_4592980350599665031[16] = 0;
   out_4592980350599665031[17] = 0;
   out_4592980350599665031[18] = 0;
   out_4592980350599665031[19] = 0;
   out_4592980350599665031[20] = 0;
   out_4592980350599665031[21] = 0;
   out_4592980350599665031[22] = 0;
   out_4592980350599665031[23] = 0;
   out_4592980350599665031[24] = 0;
   out_4592980350599665031[25] = 0;
   out_4592980350599665031[26] = 0;
   out_4592980350599665031[27] = 0;
   out_4592980350599665031[28] = 0;
   out_4592980350599665031[29] = 0;
   out_4592980350599665031[30] = 0;
   out_4592980350599665031[31] = 0;
   out_4592980350599665031[32] = 0;
   out_4592980350599665031[33] = 1;
   out_4592980350599665031[34] = 0;
   out_4592980350599665031[35] = 0;
   out_4592980350599665031[36] = 0;
   out_4592980350599665031[37] = 0;
   out_4592980350599665031[38] = 0;
   out_4592980350599665031[39] = 0;
   out_4592980350599665031[40] = 0;
   out_4592980350599665031[41] = 0;
   out_4592980350599665031[42] = 0;
   out_4592980350599665031[43] = 0;
   out_4592980350599665031[44] = 0;
   out_4592980350599665031[45] = 0;
   out_4592980350599665031[46] = 0;
   out_4592980350599665031[47] = 0;
   out_4592980350599665031[48] = 0;
   out_4592980350599665031[49] = 0;
   out_4592980350599665031[50] = 0;
   out_4592980350599665031[51] = 0;
   out_4592980350599665031[52] = 0;
   out_4592980350599665031[53] = 0;
   out_4592980350599665031[54] = 0;
   out_4592980350599665031[55] = 0;
   out_4592980350599665031[56] = 1;
   out_4592980350599665031[57] = 0;
   out_4592980350599665031[58] = 0;
   out_4592980350599665031[59] = 0;
   out_4592980350599665031[60] = 0;
   out_4592980350599665031[61] = 0;
   out_4592980350599665031[62] = 0;
   out_4592980350599665031[63] = 0;
   out_4592980350599665031[64] = 0;
   out_4592980350599665031[65] = 0;
}
void h_33(double *state, double *unused, double *out_1039274227832299569) {
   out_1039274227832299569[0] = state[16];
   out_1039274227832299569[1] = state[17];
   out_1039274227832299569[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3179376924743644122) {
   out_3179376924743644122[0] = 0;
   out_3179376924743644122[1] = 0;
   out_3179376924743644122[2] = 0;
   out_3179376924743644122[3] = 0;
   out_3179376924743644122[4] = 0;
   out_3179376924743644122[5] = 0;
   out_3179376924743644122[6] = 0;
   out_3179376924743644122[7] = 0;
   out_3179376924743644122[8] = 0;
   out_3179376924743644122[9] = 0;
   out_3179376924743644122[10] = 0;
   out_3179376924743644122[11] = 0;
   out_3179376924743644122[12] = 0;
   out_3179376924743644122[13] = 0;
   out_3179376924743644122[14] = 0;
   out_3179376924743644122[15] = 0;
   out_3179376924743644122[16] = 1;
   out_3179376924743644122[17] = 0;
   out_3179376924743644122[18] = 0;
   out_3179376924743644122[19] = 0;
   out_3179376924743644122[20] = 0;
   out_3179376924743644122[21] = 0;
   out_3179376924743644122[22] = 0;
   out_3179376924743644122[23] = 0;
   out_3179376924743644122[24] = 0;
   out_3179376924743644122[25] = 0;
   out_3179376924743644122[26] = 0;
   out_3179376924743644122[27] = 0;
   out_3179376924743644122[28] = 0;
   out_3179376924743644122[29] = 0;
   out_3179376924743644122[30] = 0;
   out_3179376924743644122[31] = 0;
   out_3179376924743644122[32] = 0;
   out_3179376924743644122[33] = 0;
   out_3179376924743644122[34] = 0;
   out_3179376924743644122[35] = 0;
   out_3179376924743644122[36] = 0;
   out_3179376924743644122[37] = 0;
   out_3179376924743644122[38] = 0;
   out_3179376924743644122[39] = 1;
   out_3179376924743644122[40] = 0;
   out_3179376924743644122[41] = 0;
   out_3179376924743644122[42] = 0;
   out_3179376924743644122[43] = 0;
   out_3179376924743644122[44] = 0;
   out_3179376924743644122[45] = 0;
   out_3179376924743644122[46] = 0;
   out_3179376924743644122[47] = 0;
   out_3179376924743644122[48] = 0;
   out_3179376924743644122[49] = 0;
   out_3179376924743644122[50] = 0;
   out_3179376924743644122[51] = 0;
   out_3179376924743644122[52] = 0;
   out_3179376924743644122[53] = 0;
   out_3179376924743644122[54] = 0;
   out_3179376924743644122[55] = 0;
   out_3179376924743644122[56] = 0;
   out_3179376924743644122[57] = 0;
   out_3179376924743644122[58] = 0;
   out_3179376924743644122[59] = 0;
   out_3179376924743644122[60] = 0;
   out_3179376924743644122[61] = 0;
   out_3179376924743644122[62] = 1;
   out_3179376924743644122[63] = 0;
   out_3179376924743644122[64] = 0;
   out_3179376924743644122[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1705590173802957792) {
  H(in_vec, out_1705590173802957792);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2360402206574617959) {
  err_fun(nom_x, delta_x, out_2360402206574617959);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4539811509280113021) {
  inv_err_fun(nom_x, true_x, out_4539811509280113021);
}
void live_H_mod_fun(double *state, double *out_3998354333387872453) {
  H_mod_fun(state, out_3998354333387872453);
}
void live_f_fun(double *state, double dt, double *out_6164175281085870497) {
  f_fun(state,  dt, out_6164175281085870497);
}
void live_F_fun(double *state, double dt, double *out_4815907768218277041) {
  F_fun(state,  dt, out_4815907768218277041);
}
void live_h_4(double *state, double *unused, double *out_7961739201317865100) {
  h_4(state, unused, out_7961739201317865100);
}
void live_H_4(double *state, double *unused, double *out_4351790703970074386) {
  H_4(state, unused, out_4351790703970074386);
}
void live_h_9(double *state, double *unused, double *out_6666237163126750011) {
  h_9(state, unused, out_6666237163126750011);
}
void live_H_9(double *state, double *unused, double *out_4592980350599665031) {
  H_9(state, unused, out_4592980350599665031);
}
void live_h_10(double *state, double *unused, double *out_3295456728395727948) {
  h_10(state, unused, out_3295456728395727948);
}
void live_H_10(double *state, double *unused, double *out_2761766956048973774) {
  H_10(state, unused, out_2761766956048973774);
}
void live_h_12(double *state, double *unused, double *out_6229943248680522981) {
  h_12(state, unused, out_6229943248680522981);
}
void live_H_12(double *state, double *unused, double *out_9075496961707515435) {
  H_12(state, unused, out_9075496961707515435);
}
void live_h_35(double *state, double *unused, double *out_4958689945564525375) {
  h_35(state, unused, out_4958689945564525375);
}
void live_H_35(double *state, double *unused, double *out_6329933929382501726) {
  H_35(state, unused, out_6329933929382501726);
}
void live_h_32(double *state, double *unused, double *out_410212729802688028) {
  h_32(state, unused, out_410212729802688028);
}
void live_H_32(double *state, double *unused, double *out_972416037003074665) {
  H_32(state, unused, out_972416037003074665);
}
void live_h_13(double *state, double *unused, double *out_4031627545452802049) {
  h_13(state, unused, out_4031627545452802049);
}
void live_H_13(double *state, double *unused, double *out_1643735551917084066) {
  H_13(state, unused, out_1643735551917084066);
}
void live_h_14(double *state, double *unused, double *out_6666237163126750011) {
  h_14(state, unused, out_6666237163126750011);
}
void live_H_14(double *state, double *unused, double *out_4592980350599665031) {
  H_14(state, unused, out_4592980350599665031);
}
void live_h_33(double *state, double *unused, double *out_1039274227832299569) {
  h_33(state, unused, out_1039274227832299569);
}
void live_H_33(double *state, double *unused, double *out_3179376924743644122) {
  H_33(state, unused, out_3179376924743644122);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
